[{"/Users/dangoldshtein/Desktop/shopi-style/shopi-style-client/src/index.js":"1","/Users/dangoldshtein/Desktop/shopi-style/shopi-style-client/src/App.js":"2","/Users/dangoldshtein/Desktop/shopi-style/shopi-style-client/src/store/store.js":"3","/Users/dangoldshtein/Desktop/shopi-style/shopi-style-client/src/store/reducers/products.js":"4","/Users/dangoldshtein/Desktop/shopi-style/shopi-style-client/src/store/reducers/shopping-list.js":"5","/Users/dangoldshtein/Desktop/shopi-style/shopi-style-client/src/store/reducers/collection.js":"6","/Users/dangoldshtein/Desktop/shopi-style/shopi-style-client/src/utils/keys.js":"7","/Users/dangoldshtein/Desktop/shopi-style/shopi-style-client/src/store/reducers/search.js":"8","/Users/dangoldshtein/Desktop/shopi-style/shopi-style-client/src/store/constats/shopping-list.js":"9","/Users/dangoldshtein/Desktop/shopi-style/shopi-style-client/src/store/constats/products.js":"10","/Users/dangoldshtein/Desktop/shopi-style/shopi-style-client/src/components/CategoriesBarComponent/index.jsx":"11","/Users/dangoldshtein/Desktop/shopi-style/shopi-style-client/src/store/constats/collection.js":"12","/Users/dangoldshtein/Desktop/shopi-style/shopi-style-client/src/components/AppBarComponent/index.jsx":"13","/Users/dangoldshtein/Desktop/shopi-style/shopi-style-client/src/store/constats/auto-complete.js":"14","/Users/dangoldshtein/Desktop/shopi-style/shopi-style-client/src/utils/data.js":"15","/Users/dangoldshtein/Desktop/shopi-style/shopi-style-client/src/hooks/useCheckMobileScreen.js":"16","/Users/dangoldshtein/Desktop/shopi-style/shopi-style-client/src/pages/PaymentPage/index.jsx":"17","/Users/dangoldshtein/Desktop/shopi-style/shopi-style-client/src/pages/CollectionPage/index.jsx":"18","/Users/dangoldshtein/Desktop/shopi-style/shopi-style-client/src/pages/ProductPage/index.jsx":"19","/Users/dangoldshtein/Desktop/shopi-style/shopi-style-client/src/pages/ShoppingListPage/index.jsx":"20","/Users/dangoldshtein/Desktop/shopi-style/shopi-style-client/src/pages/HomePage/index.jsx":"21","/Users/dangoldshtein/Desktop/shopi-style/shopi-style-client/src/components/AutoCompleteComponent/index.jsx":"22","/Users/dangoldshtein/Desktop/shopi-style/shopi-style-client/src/store/actions/shopping-list.js":"23","/Users/dangoldshtein/Desktop/shopi-style/shopi-style-client/src/store/actions/products.js":"24","/Users/dangoldshtein/Desktop/shopi-style/shopi-style-client/src/store/actions/collection.js":"25","/Users/dangoldshtein/Desktop/shopi-style/shopi-style-client/src/components/ExceptionComponents/index.jsx":"26","/Users/dangoldshtein/Desktop/shopi-style/shopi-style-client/src/components/ProductCardComponent/index.jsx":"27","/Users/dangoldshtein/Desktop/shopi-style/shopi-style-client/src/components/FiltersComponent/index.jsx":"28","/Users/dangoldshtein/Desktop/shopi-style/shopi-style-client/src/components/FooterComponent/index.jsx":"29","/Users/dangoldshtein/Desktop/shopi-style/shopi-style-client/src/hooks/useMounted.js":"30","/Users/dangoldshtein/Desktop/shopi-style/shopi-style-client/src/services/shopping-list.js":"31","/Users/dangoldshtein/Desktop/shopi-style/shopi-style-client/src/services/data-types.js":"32","/Users/dangoldshtein/Desktop/shopi-style/shopi-style-client/src/routes/index.jsx":"33"},{"size":342,"mtime":1657289613343,"results":"34","hashOfConfig":"35"},{"size":492,"mtime":1659810221956,"results":"36","hashOfConfig":"35"},{"size":1388,"mtime":1659687971252,"results":"37","hashOfConfig":"35"},{"size":762,"mtime":1659515065313,"results":"38","hashOfConfig":"35"},{"size":1664,"mtime":1659515120880,"results":"39","hashOfConfig":"35"},{"size":666,"mtime":1659687525008,"results":"40","hashOfConfig":"35"},{"size":203,"mtime":1658238128274,"results":"41","hashOfConfig":"35"},{"size":787,"mtime":1659528417775,"results":"42","hashOfConfig":"35"},{"size":368,"mtime":1658606272906,"results":"43","hashOfConfig":"35"},{"size":471,"mtime":1659687848978,"results":"44","hashOfConfig":"35"},{"size":2410,"mtime":1659530030391,"results":"45","hashOfConfig":"35"},{"size":198,"mtime":1659687992895,"results":"46","hashOfConfig":"35"},{"size":6434,"mtime":1659530018830,"results":"47","hashOfConfig":"35"},{"size":221,"mtime":1658606272905,"results":"48","hashOfConfig":"35"},{"size":301,"mtime":1657289613346,"results":"49","hashOfConfig":"35"},{"size":504,"mtime":1657289613343,"results":"50","hashOfConfig":"35"},{"size":11550,"mtime":1659514792228,"results":"51","hashOfConfig":"35"},{"size":2126,"mtime":1659810554468,"results":"52","hashOfConfig":"35"},{"size":8172,"mtime":1659687969480,"results":"53","hashOfConfig":"35"},{"size":8917,"mtime":1659530030409,"results":"54","hashOfConfig":"35"},{"size":3488,"mtime":1659530030391,"results":"55","hashOfConfig":"35"},{"size":2486,"mtime":1659514901682,"results":"56","hashOfConfig":"35"},{"size":1056,"mtime":1659514943128,"results":"57","hashOfConfig":"35"},{"size":769,"mtime":1659687967017,"results":"58","hashOfConfig":"35"},{"size":685,"mtime":1659812023141,"results":"59","hashOfConfig":"35"},{"size":756,"mtime":1659514833546,"results":"60","hashOfConfig":"35"},{"size":2291,"mtime":1659530030426,"results":"61","hashOfConfig":"35"},{"size":3219,"mtime":1659812058157,"results":"62","hashOfConfig":"35"},{"size":1806,"mtime":1658606272904,"results":"63","hashOfConfig":"35"},{"size":243,"mtime":1659781275838,"results":"64","hashOfConfig":"35"},{"size":412,"mtime":1659530038763,"results":"65","hashOfConfig":"35"},{"size":569,"mtime":1659530052147,"results":"66","hashOfConfig":"35"},{"size":1181,"mtime":1659810227122,"results":"67","hashOfConfig":"35"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},"1bf0a1f",{"filePath":"71","messages":"72","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"73","messages":"74","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"75","messages":"76","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"77","messages":"78","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"79","messages":"80","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"81","messages":"82","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"83","messages":"84","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"85","messages":"86","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"87","messages":"88","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"89","messages":"90","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"91","messages":"92","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"93","messages":"94","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"95","usedDeprecatedRules":"70"},{"filePath":"96","messages":"97","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"98","messages":"99","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"100","messages":"101","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"102","messages":"103","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"104","usedDeprecatedRules":"70"},{"filePath":"105","messages":"106","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"107","messages":"108","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"109","usedDeprecatedRules":"70"},{"filePath":"110","messages":"111","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"112","messages":"113","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"114","messages":"115","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"116","messages":"117","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"118","messages":"119","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"120","messages":"121","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"122","messages":"123","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"124","messages":"125","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"126","messages":"127","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"128","messages":"129","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"130","messages":"131","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"132","messages":"133","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"134","messages":"135","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"136","messages":"137","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/dangoldshtein/Desktop/shopi-style/shopi-style-client/src/index.js",[],["138","139"],"/Users/dangoldshtein/Desktop/shopi-style/shopi-style-client/src/App.js",[],"/Users/dangoldshtein/Desktop/shopi-style/shopi-style-client/src/store/store.js",[],"/Users/dangoldshtein/Desktop/shopi-style/shopi-style-client/src/store/reducers/products.js",[],"/Users/dangoldshtein/Desktop/shopi-style/shopi-style-client/src/store/reducers/shopping-list.js",[],"/Users/dangoldshtein/Desktop/shopi-style/shopi-style-client/src/store/reducers/collection.js",[],"/Users/dangoldshtein/Desktop/shopi-style/shopi-style-client/src/utils/keys.js",[],"/Users/dangoldshtein/Desktop/shopi-style/shopi-style-client/src/store/reducers/search.js",[],"/Users/dangoldshtein/Desktop/shopi-style/shopi-style-client/src/store/constats/shopping-list.js",[],"/Users/dangoldshtein/Desktop/shopi-style/shopi-style-client/src/store/constats/products.js",[],"/Users/dangoldshtein/Desktop/shopi-style/shopi-style-client/src/components/CategoriesBarComponent/index.jsx",[],"/Users/dangoldshtein/Desktop/shopi-style/shopi-style-client/src/store/constats/collection.js",[],"/Users/dangoldshtein/Desktop/shopi-style/shopi-style-client/src/components/AppBarComponent/index.jsx",["140"],"import React, { useState } from 'react';\nimport { useSelector } from 'react-redux';\nimport { Link } from \"react-router-dom\";\nimport useCheckMobileScreen from '../../hooks/useCheckMobileScreen';\nimport { fade, makeStyles } from '@material-ui/core/styles';\nimport { AppBar, Toolbar, IconButton, Badge, MenuItem, Menu, Tooltip } from '@material-ui/core';\nimport HomeIcon from '@material-ui/icons/Home';\nimport MenuIcon from '@material-ui/icons/Menu';\nimport ShoppingCartIcon from '@material-ui/icons/ShoppingCart';\nimport AddShoppingCartIcon from '@material-ui/icons/AddShoppingCart';\nimport AutoCompleteComponent from '../AutoCompleteComponent';\nimport { getProductsAmount } from '../../services/shopping-list';\n\n// ---------------------------------- useStyles ----------------------------------\n\nconst useStyles = makeStyles((theme) => ({\n  grow: {\n    flexGrow: 1,\n  },\n  appBar: {\n    backgroundColor: '#212121'\n  },\n  appBarLink: {\n    color: 'white',\n    textDecoration: 'none',\n  },\n  menuLink: {\n    color: 'black',\n    textDecoration: 'none',\n  },\n  title: {\n    display: 'none',\n    [theme.breakpoints.up('sm')]: {\n      display: 'block',\n    },\n  },\n  appBarLogo: {\n    padding: '5px',\n    paddingTop: '15px',\n    transition: 'transform .2s ease-in-out',\n    \"&:hover\": {\n      transform: 'scale(1.1)',\n    }\n  },\n  searchIcon: {\n    padding: theme.spacing(0, 2),\n    height: '100%',\n    position: 'absolute',\n    pointerEvents: 'none',\n    display: 'flex',\n    alignItems: 'center',\n    justifyContent: 'center',\n  },\n  inputRoot: {\n    color: 'inherit',\n  },\n  inputInput: {\n    padding: theme.spacing(1, 7, 1, 0),\n    // vertical padding + font size from searchIcon\n    paddingLeft: `calc(1em + ${theme.spacing(4)}px)`,\n    transition: theme.transitions.create('width'),\n    width: '100%',\n    [theme.breakpoints.up('md')]: {\n      width: '20ch',\n    },\n  },\n  autoCompleteRoot: {\n    width: '600px',\n    backgroundColor: fade(theme.palette.common.white, 0.15),\n    '&:hover': {\n      backgroundColor: fade(theme.palette.common.white, 0.25),\n    },\n  },\n  autoCompleteLabel: {\n    \"&$autoCompleteFocusedLabel\": {\n      color: \"white\"\n    },\n  },\n  autoCompleteFocusedLabel: {},\n  list: {\n    width: 250,\n  },\n  textFieldRoot: {\n    color: \"white\"\n  },\n  notchedOutline: {\n    borderWidth: \"0.5px\",\n    borderColor: \"white !important\"\n  },\n  fullList: {\n    width: 'auto',\n  },\n  sectionDesktop: {\n    display: 'none',\n    [theme.breakpoints.up('md')]: {\n      display: 'flex',\n    },\n  },\n  sectionMobile: {\n    display: 'flex',\n    [theme.breakpoints.up('sm')]: {\n      display: 'none',\n    },\n  },\n}));\n\n// ---------------------------------- Constants ----------------------------------\n\nconst AppBarComponent = props => {\n  const classes = useStyles();\n  const { shoppingList } = useSelector(state => state.shoppingList);\n  const [mobileMoreAnchorEl, setMobileMoreAnchorEl] = useState(null);\n\n  const isMobileMenuOpen = Boolean(mobileMoreAnchorEl);\n\n  const onMobileMenuOpen = (event) => { setMobileMoreAnchorEl(event.currentTarget); };\n\n  const onMobileMenuClose = () => { setMobileMoreAnchorEl(null); };\n\n  const isMobileMode = useCheckMobileScreen();\n\n  // ---------------------------------- renderMobileMenu ----------------------------------\n  const mobileMenuId = 'menu-mobile';\n\n  const renderMobileMenu = (\n    <Menu\n      anchorEl={mobileMoreAnchorEl}\n      anchorOrigin={{ vertical: 'top', horizontal: 'right' }}\n      id={mobileMenuId}\n      keepMounted\n      transformOrigin={{ vertical: 'top', horizontal: 'right' }}\n      open={isMobileMenuOpen}\n      onClose={onMobileMenuClose}\n    >\n      <MenuItem onClick={onMobileMenuClose}>\n        <Link to=\"/\" className={classes.menuLink}>\n          <IconButton aria-label=\"home\" color=\"inherit\">\n            <Badge color=\"secondary\">\n              <HomeIcon />\n            </Badge>\n          </IconButton>\n          Home\n        </Link>\n      </MenuItem>\n      <MenuItem onClick={onMobileMenuClose}>\n        <Link to=\"/shopping-list\" className={classes.menuLink}>\n          <IconButton aria-label=\"cart-notifications\" color=\"inherit\">\n            {!shoppingList.length && <AddShoppingCartIcon />}\n            {\n              shoppingList.length > 0 &&\n              <Badge badgeContent={getProductsAmount(shoppingList)} color=\"secondary\">\n                <ShoppingCartIcon />\n              </Badge>\n            }\n          </IconButton>\n          Cart\n        </Link>\n      </MenuItem>\n    </Menu>\n  );\n\n  // ---------------------------------- Render AppBarComponent ----------------------------------\n  return (\n    <div className={classes.grow}>\n      <AppBar position=\"static\" className={classes.appBar}>\n        <Toolbar>\n          {\n            !isMobileMode &&\n            <Link to=\"/\">\n              <img className={classes.appBarLogo} src={`${process.env.PUBLIC_URL}/assets/logos/logo-smaller.png`} />\n            </Link>\n          }\n          <AutoCompleteComponent />\n          <div className={classes.grow} />\n          <div className={classes.sectionDesktop}>\n            <Link to=\"/\" className={classes.appBarLink}>\n              <Tooltip title=\"Home\">\n                <IconButton aria-label=\"home\" color=\"inherit\">\n                  <Badge color=\"secondary\">\n                    <HomeIcon />\n                  </Badge>\n                </IconButton>\n              </Tooltip>\n            </Link>\n            <Link to=\"/shopping-list\" className={classes.appBarLink}>\n              <Tooltip title=\"Cart\">\n                <IconButton aria-label=\"cart-notifications\" color=\"inherit\">\n                  {!shoppingList.length && <AddShoppingCartIcon />}\n                  {\n                    shoppingList.length > 0 &&\n                    <Badge badgeContent={getProductsAmount(shoppingList)} color=\"secondary\">\n                      <ShoppingCartIcon />\n                    </Badge>\n                  }\n                </IconButton>\n              </Tooltip>\n            </Link>\n          </div>\n          <div className={classes.sectionMobile}>\n            <IconButton\n              aria-label=\"show more\"\n              aria-controls={mobileMenuId}\n              aria-haspopup=\"true\"\n              onClick={onMobileMenuOpen}\n              color=\"inherit\"\n            >\n              <MenuIcon />\n            </IconButton>\n          </div>\n        </Toolbar>\n      </AppBar>\n      { renderMobileMenu}\n    </div >\n  );\n}\n\n\n\nexport default AppBarComponent;\n","/Users/dangoldshtein/Desktop/shopi-style/shopi-style-client/src/store/constats/auto-complete.js",[],"/Users/dangoldshtein/Desktop/shopi-style/shopi-style-client/src/utils/data.js",[],"/Users/dangoldshtein/Desktop/shopi-style/shopi-style-client/src/hooks/useCheckMobileScreen.js",[],"/Users/dangoldshtein/Desktop/shopi-style/shopi-style-client/src/pages/PaymentPage/index.jsx",["141","142"],"import React, { useState } from 'react';\nimport { makeStyles, withStyles } from '@material-ui/core/styles';\nimport {\n    Dialog,\n    DialogContent,\n    DialogContentText,\n    Table,\n    TableBody,\n    TableCell,\n    TableContainer,\n    TableHead,\n    TableRow\n} from '@material-ui/core';\nimport Container from '@material-ui/core/Container';\nimport { useSelector } from 'react-redux';\nimport { LoadingComponent } from '../../components/ExceptionComponents';\nimport TextField from '@material-ui/core/TextField';\nimport { cloneDeep } from 'lodash';\nimport { STRIPE_PUBLISH_KEY, BASE_API_URL } from '../../utils/keys';\nimport { loadStripe } from '@stripe/stripe-js';\nimport { Elements, CardElement, useStripe, useElements } from '@stripe/react-stripe-js';\nimport { Typography, Paper, Grid, Button, CssBaseline } from '@material-ui/core';\nimport axios from 'axios';\nimport MuiDialogTitle from '@material-ui/core/DialogTitle';\nimport IconButton from '@material-ui/core/IconButton';\nimport CloseIcon from '@material-ui/icons/Close';\nimport useCheckMobileScreen from '../../hooks/useCheckMobileScreen';\n\nconst stripePromise = loadStripe(STRIPE_PUBLISH_KEY);\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n        marginTop: theme.spacing(5),\n        paddingBottom: '40px',\n    },\n    tableContainer: {\n        margin: '0 auto',\n        marginTop: theme.spacing(5),\n        marginBottom: theme.spacing(5),\n        width: '700px',\n    },\n    image: {\n        height: '100px',\n        width: '100px',\n        borderRadius: \"50%\",\n    },\n    centerTableCell: {\n        display: 'flex',\n        flexDirection: 'row',\n        justifyContent: 'center',\n    },\n    amountField: {\n        width: '50%',\n    },\n    paper: {\n        paddingTop: theme.spacing(3),\n        paddingRight: theme.spacing(8),\n        paddingLeft: theme.spacing(8),\n        paddingBottom: theme.spacing(3),\n    },\n    form: {\n        width: '700px',\n        margin: '0 auto',\n        [theme.breakpoints.down('sm')]:{\n            width: '320px',\n        },\n    },\n    paymentCard: {\n        margin: '20px',\n        [theme.breakpoints.down('sm')]:{\n            margin: 0,\n            marginTop: '20px',\n            marginBottom: '20px',\n            width:'110%',\n        },\n    }\n}));\n\n\nconst styles = (theme) => ({\n    root: {\n        margin: 0,\n        padding: theme.spacing(2),\n    },\n    closeButton: {\n        position: 'absolute',\n        right: theme.spacing(1),\n        top: theme.spacing(1),\n        color: theme.palette.grey[500],\n    },\n});\n\nconst DialogTitle = withStyles(styles)((props) => {\n    const { children, classes, onClose, ...other } = props;\n    return (\n        <MuiDialogTitle disableTypography className={classes.root} {...other}>\n            <Typography variant=\"h6\">{children}</Typography>\n            {onClose ? (\n                <IconButton aria-label=\"close\" className={classes.closeButton} onClick={onClose}>\n                    <CloseIcon />\n                </IconButton>\n            ) : null}\n        </MuiDialogTitle>\n    );\n});\n\nconst PaymentPage = props => {\n    const classes = useStyles();\n    const { product: initProduct, isLoading: productLoading } = useSelector(state => state.product);\n    const { shoppingList, isLoading: listLoading, paymentPage } = useSelector(state => state.shoppingList);\n    const [product, setProduct] = useState(cloneDeep(initProduct));\n\n    const onAmountChange = (event, product) => {\n        product.amount = event.target.value;\n        product.newPrice = product.amount * product.price;\n        setProduct(cloneDeep(product));\n    }\n    const isMobileMode = useCheckMobileScreen();\n    \n    return (\n        <Container >\n            {\n                productLoading || listLoading ? <LoadingComponent />\n                    : product && paymentPage === \"product-page\" && !isMobileMode &&\n                    (\n                        <TableContainer elevation={3} className={classes.tableContainer} component={Paper}>\n                            <Table className={classes.table} aria-label=\"simple table\">\n                                <TableHead>\n                                    <TableRow>\n                                        <TableCell align=\"center\">Image</TableCell>\n                                        <TableCell align=\"center\">Caption</TableCell>\n                                        <TableCell align=\"center\">Size</TableCell>\n                                        <TableCell align=\"center\">Amount</TableCell>\n                                        <TableCell align=\"center\">Price</TableCell>\n                                    </TableRow>\n                                </TableHead>\n                                <TableBody>\n                                    <TableRow key={product.uuid}>\n                                        <TableCell className={classes.centerTableCell} component=\"th\" scope=\"row\">\n                                            <img className={classes.image} src={product.imageUrl} />\n                                        </TableCell>\n                                        <TableCell align=\"center\">{product.caption}</TableCell>\n                                        <TableCell align=\"center\">{product.selectedSize ? product.selectedSize : \"-\"}</TableCell>\n                                        <TableCell align=\"center\">\n                                            <TextField\n                                                className={classes.amountField}\n                                                id=\"standard-number\"\n                                                inputProps={{ min: 1, style: { textAlign: 'center' } }}\n                                                type=\"number\"\n                                                defaultValue={product.amount}\n                                                onChange={event => onAmountChange(event, product)}\n                                            />\n                                        </TableCell>\n                                        <TableCell align=\"center\">\n                                            {`${product.newPrice ? product.newPrice : product.price}$`}\n                                        </TableCell>\n                                    </TableRow>\n                                </TableBody>\n                            </Table>\n                        </TableContainer>\n                    )\n            }\n            <Elements stripe={stripePromise}>\n                {product && paymentPage === \"product-page\" && <CheckoutForm items={[product]} />}\n                {shoppingList && paymentPage === \"shopping-list-page\" && <CheckoutForm items={shoppingList} />}\n            </Elements>\n        </Container>\n    );\n}\n\n\nconst CheckoutForm = ({ items }) => {\n    const classes = useStyles();\n    const stripe = useStripe();\n    const elements = useElements();\n    const [email, setEmail] = useState('');\n\n    const [openDialog, setOpenDialog] = useState(false);\n\n    const handleClickOpen = () => {\n        setOpenDialog(true);\n    };\n\n    const handleClose = () => {\n        setOpenDialog(false);\n    };\n\n    const totalPrice = items.reduce((acc, item) => acc + (item.amount * item.price), 0);\n\n    const onSubmit = async event => {\n        event.preventDefault();\n\n        const { error, paymentMethod } = await stripe.createPaymentMethod({\n            type: 'card',\n            card: elements.getElement(CardElement)\n        });\n\n        if (!error) {\n            const { id } = paymentMethod;\n            try {\n                const { data } = await axios.post(`${BASE_API_URL}/payment`, { id, amount: 1099 });\n                if (data.isConfirm) setOpenDialog(true);\n            } catch (err) {\n                console.log(err)\n            }\n        } else {\n            console.log(error)\n        }\n    }\n\n    const validateEmail = email => {\n        if (email === '') return true;\n        const regex = /^(([^<>()[\\]\\\\.,;:\\s@\"]+(\\.[^<>()[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\n        return regex.test(String(email).toLowerCase());\n    }\n\n    return (\n        <div className={classes.root}>\n            <form onSubmit={onSubmit} className={classes.form}>\n                <Paper elevation={5} className={classes.paper}>\n                    <Grid container spacing={3}>\n                        <Grid item xs={12}>\n                            <Grid container spacing={2}>\n                                <Grid item xs={12}><Typography >Total Charges: {totalPrice}$</Typography></Grid>\n                                <Grid item xs={12}>\n                                    <TextField\n                                        fullWidth\n                                        label=\"Full Name\"\n                                        name=\"full-name\"\n                                        size=\"small\"\n                                        variant=\"outlined\"\n                                        required\n                                    />\n                                </Grid>\n                                <Grid item xs={12}>\n                                    <TextField\n                                        fullWidth\n                                        label=\"Email\"\n                                        name=\"email\"\n                                        size=\"small\"\n                                        variant=\"outlined\"\n                                        required\n                                        error={!validateEmail(email)}\n                                        onChange={event => setEmail(event.target.value)}\n                                    />\n                                </Grid>\n                                <Grid item xs={12}>\n                                    <TextField\n                                        fullWidth\n                                        label=\"Delivery Address\"\n                                        name=\"address\"\n                                        size=\"small\"\n                                        variant=\"outlined\"\n                                        required\n                                    />\n                                </Grid>\n                            </Grid>\n                        </Grid>\n                    </Grid>\n                    <CssBaseline />\n                    <CardElement className={classes.paymentCard} />\n                    <Grid item xs={12}>\n                        <Button\n                            color=\"primary\"\n                            fullWidth\n                            disabled={!stripe}\n                            type=\"submit\"\n                            variant=\"contained\">\n                            Pay\n                    </Button>\n                    </Grid>\n                    <Dialog\n                        open={openDialog}\n                        onClose={handleClose}\n                    >\n                        <DialogTitle id=\"alert-dialog-title\" onClose={handleClose}>\n                            Payment Confirmation\n                        </DialogTitle>\n                        <DialogContent dividers>\n                            <DialogContentText id=\"dialog\">\n                                This is a dummy payment. Payment process is still in development.\n                                </DialogContentText>\n                        </DialogContent>\n                    </Dialog>\n                </Paper>\n            </form >\n        </div >\n    )\n}\n\nexport default PaymentPage;","/Users/dangoldshtein/Desktop/shopi-style/shopi-style-client/src/pages/CollectionPage/index.jsx",["143"],"/Users/dangoldshtein/Desktop/shopi-style/shopi-style-client/src/pages/ProductPage/index.jsx",["144"],"import React, { useState, useEffect } from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport { LoadingComponent } from \"../../components/ExceptionComponents\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport {\n  fetchProductAction,\n  updateSelectedProductAction,\n} from \"../../store/actions/products\";\nimport {\n  addNewProductToCartAction,\n  increaseProductAmountAction,\n  selectPaymentPageAction,\n} from \"../../store/actions/shopping-list\";\nimport {\n  Button,\n  Typography,\n  Card,\n  CardContent,\n  CardMedia,\n} from \"@material-ui/core\";\nimport {\n  capitalized,\n  capitalFirstLetter,\n} from \"../../services/data-types\";\nimport { cloneDeep } from \"lodash\";\nimport { isProductExists } from \"../../services/shopping-list\";\nimport { v4 as uuidv4 } from \"uuid\";\nimport ShoppingCartIcon from \"@material-ui/icons/ShoppingCart\";\nimport { useParams, useHistory } from \"react-router-dom\";\nimport Popover from \"@material-ui/core/Popover\";\n\nimport \"./ProductPage.css\";\nimport { Alert } from \"@material-ui/lab\";\nimport FavoriteBorder from \"@material-ui/icons/FavoriteBorder\";\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    marginTop: 30,\n    height: \"500\",\n    boxShadow: \"0px 0px 2px 2px rgba(0,0,0,0.2)\",\n    [theme.breakpoints.down(\"sm\")]: {\n      height: 500,\n    },\n  },\n  cardContainer: {\n    display: \"flex\",\n    flexDirection: \"row\",\n    justifyContent: \"space-around\",\n    paddingTop: \"40px\",\n    paddingBottom: \"40px\",\n    [theme.breakpoints.down(\"sm\")]: {\n      paddingTop: 20,\n      flexDirection: \"column\",\n      alignItems: \"center\",\n      marginTop: 0,\n    },\n  },\n  media: {\n    height: 400,\n    width: 400,\n    backgroundSize: \"contain\",\n    [theme.breakpoints.down(\"sm\")]: {\n      margin: 20,\n      border: 0,\n      borderRadius: 0,\n      height: 150,\n      width: 150,\n    },\n  },\n  title: {\n    fontFamily: \"Acme, sans-serif\",\n    [theme.breakpoints.down(\"sm\")]: {\n      marginTop: 10,\n      marginBottom: 10,\n      fontSize: 17,\n      flexWrap: \"wrap\",\n    },\n  },\n  details: {\n    display: \"flex\",\n    flexDirection: \"column\",\n    justifyContent: \"center\",\n    border: \"1px solid #ccc\",\n    borderRadius: \"25px\",\n    width: \"500px\",\n    [theme.breakpoints.down(\"sm\")]: {\n      border: 0,\n      borderRadius: 0,\n      marginTop: \"40px\",\n      height: 150,\n      width: \"100%\",\n    },\n  },\n  button: {\n    margin: 5,\n    width: \"230px\",\n    [theme.breakpoints.down(\"sm\")]: {\n      marin: \"0 auto\",\n      width: \"230px\",\n    },\n  },\n  popover: {\n    width: \"200px\",\n  },\n}));\n\nconst ProductPage = (props) => {\n  const classes = useStyles();\n  const { collection, productID } = useParams();\n  const { product: initProduct, isLoading } = useSelector(\n    (state) => state.product\n  );\n  const { shoppingList } = useSelector((state) => state.shoppingList);\n  const [product, setProduct] = useState(cloneDeep(initProduct));\n\n  const [anchorSuccessPopover, setSuccessPopover] = useState(null);\n  const [anchorErrorPopover, setErrorPopover] = useState(null);\n\n  const openSuccess = Boolean(anchorSuccessPopover);\n  const openError = Boolean(anchorErrorPopover);\n\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    dispatch(fetchProductAction(collection, productID));\n  }, [collection, productID]);\n\n  useEffect(() => {\n    if (initProduct) setProduct(cloneDeep(initProduct));\n  }, [initProduct]);\n\n  const onSizeClick = (event) => {\n    const newProduct = cloneDeep(product);\n    newProduct.selectedSize = event.target.value;\n    setProduct(newProduct);\n  };\n\n  const onAddToCartClick = (event) => {\n    if (!validateSize(product)) {\n      setErrorPopover(event.currentTarget);\n      return;\n    }\n    // isProductExists return isFound index\n    const productIndex = isProductExists(shoppingList, product);\n    if (productIndex !== -1) {\n      increaseProductAmount(productIndex);\n    } else {\n      addNewProductToCart(product);\n    }\n    setSuccessPopover(event.currentTarget);\n  };\n\n  const onBuyNowClick = (event, history) => {\n    if (!validateSize(product)) {\n      setErrorPopover(event.currentTarget);\n      return;\n    }\n    product.amount = 1;\n    dispatch(updateSelectedProductAction(product));\n    dispatch(selectPaymentPageAction(\"product-page\"));\n    history.push(\"/payment-page\");\n  };\n\n  const addNewProductToCart = (product) => {\n    product.uuid = uuidv4();\n    dispatch(addNewProductToCartAction(product));\n  };\n\n  const increaseProductAmount = (productIndex) => {\n    dispatch(increaseProductAmountAction(productIndex));\n  };\n\n  const validateSize = (product) =>\n    !(!product.selectedSize && product.sizes.length > 1);\n\n  let history = useHistory();\n\n  if (isLoading) {\n    return <div style={{ textAlign: \"center\" }}><LoadingComponent /></div>;\n  }\n\n  return (\n    <Card className={classes.root}>\n      {\n        <div className={classes.cardContainer}>\n          <CardMedia className={classes.media} image={product?.imageUrl} />\n          <CardContent className={classes.details}>\n            <Typography\n              gutterBottom\n              align=\"center\"\n              variant=\"h5\"\n              className={classes.title}\n            >\n              {capitalFirstLetter(`${product?.caption}`)}\n            </Typography>\n            {product?.sizes && product?.sizes.length > 1 && (\n              <Typography gutterBottom align=\"center\" variant=\"caption\">\n                {capitalized(\"select size\")}\n              </Typography>\n            )}\n            <div className=\"radio-buttons-group\">\n              {product?.sizes &&\n                product?.sizes.length > 1 &&\n                product?.sizes.map((size, i) => {\n                  if (typeof size === \"string\") {\n                    size = capitalized(size);\n                  }\n                  return (\n                    <label className=\"size-label\" key={\"size_label\" + i}>\n                      <input\n                        type=\"radio\"\n                        key={\"radio\" + i}\n                        name=\"size\"\n                        value={size}\n                        onClick={(event) => onSizeClick(event)}\n                      />\n                      <div className=\"radio-button\" key={\"radio_button\" + i}>\n                        {size}\n                      </div>\n                    </label>\n                  );\n                })}\n            </div>\n            <Typography gutterBottom align=\"center\" variant=\"subtitle1\">\n              {capitalFirstLetter(`${product?.price}$`)}\n            </Typography>\n            <div className=\"actions-buttons\">\n              <Button\n                className={classes.button}\n                id=\"buy-now\"\n                variant=\"contained\"\n                color=\"primary\"\n                startIcon={<ShoppingCartIcon />}\n                onClick={(event) => onBuyNowClick(event, history)}\n              >\n                Buy Now\n              </Button>\n              <Button\n                className={classes.button}\n                id=\"add-to-cart\"\n                variant=\"contained\"\n                color=\"secondary\"\n                startIcon={<FavoriteBorder />}\n                onClick={onAddToCartClick}\n              >\n                Add to cart\n              </Button>\n            </div>\n          </CardContent>\n        </div>\n      }\n      <Popover\n        id=\"success-popover\"\n        open={openSuccess}\n        anchorEl={anchorSuccessPopover}\n        onClose={() => setSuccessPopover(null)}\n        anchorOrigin={{\n          vertical: \"bottom\",\n          horizontal: \"center\",\n        }}\n        transformOrigin={{\n          vertical: \"top\",\n          horizontal: \"center\",\n        }}\n      >\n        <Alert severity=\"success\">Product Added.</Alert>\n      </Popover>\n      <Popover\n        id=\"success-popover\"\n        open={openError}\n        anchorEl={anchorErrorPopover}\n        onClose={() => setErrorPopover(null)}\n        anchorOrigin={{\n          vertical: \"bottom\",\n          horizontal: \"center\",\n        }}\n        transformOrigin={{\n          vertical: \"top\",\n          horizontal: \"center\",\n        }}\n      >\n        <Alert severity=\"error\">Please Select Size!</Alert>\n      </Popover>\n    </Card>\n  );\n};\n\nexport default ProductPage;\n","/Users/dangoldshtein/Desktop/shopi-style/shopi-style-client/src/pages/ShoppingListPage/index.jsx",[],"/Users/dangoldshtein/Desktop/shopi-style/shopi-style-client/src/pages/HomePage/index.jsx",[],"/Users/dangoldshtein/Desktop/shopi-style/shopi-style-client/src/components/AutoCompleteComponent/index.jsx",[],"/Users/dangoldshtein/Desktop/shopi-style/shopi-style-client/src/store/actions/shopping-list.js",[],"/Users/dangoldshtein/Desktop/shopi-style/shopi-style-client/src/store/actions/products.js",[],"/Users/dangoldshtein/Desktop/shopi-style/shopi-style-client/src/store/actions/collection.js",[],"/Users/dangoldshtein/Desktop/shopi-style/shopi-style-client/src/components/ExceptionComponents/index.jsx",[],"/Users/dangoldshtein/Desktop/shopi-style/shopi-style-client/src/components/ProductCardComponent/index.jsx",[],"/Users/dangoldshtein/Desktop/shopi-style/shopi-style-client/src/components/FiltersComponent/index.jsx",["145"],"/Users/dangoldshtein/Desktop/shopi-style/shopi-style-client/src/components/FooterComponent/index.jsx",[],"/Users/dangoldshtein/Desktop/shopi-style/shopi-style-client/src/hooks/useMounted.js",[],"/Users/dangoldshtein/Desktop/shopi-style/shopi-style-client/src/services/shopping-list.js",[],"/Users/dangoldshtein/Desktop/shopi-style/shopi-style-client/src/services/data-types.js",[],"/Users/dangoldshtein/Desktop/shopi-style/shopi-style-client/src/routes/index.jsx",[],{"ruleId":"146","replacedBy":"147"},{"ruleId":"148","replacedBy":"149"},{"ruleId":"150","severity":1,"message":"151","line":170,"column":15,"nodeType":"152","endLine":170,"endColumn":117},{"ruleId":"150","severity":1,"message":"151","line":140,"column":45,"nodeType":"152","endLine":140,"endColumn":101},{"ruleId":"153","severity":1,"message":"154","line":180,"column":11,"nodeType":"155","messageId":"156","endLine":180,"endColumn":26},{"ruleId":"157","severity":1,"message":"158","line":42,"column":6,"nodeType":"159","endLine":42,"endColumn":8,"suggestions":"160"},{"ruleId":"157","severity":1,"message":"161","line":126,"column":6,"nodeType":"159","endLine":126,"endColumn":29,"suggestions":"162"},{"ruleId":"157","severity":1,"message":"163","line":41,"column":8,"nodeType":"159","endLine":41,"endColumn":17,"suggestions":"164"},"no-native-reassign",["165"],"no-negated-in-lhs",["166"],"jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","no-unused-vars","'handleClickOpen' is assigned a value but never used.","Identifier","unusedVar","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'refetch'. Either include it or remove the dependency array.","ArrayExpression",["167"],"React Hook useEffect has a missing dependency: 'dispatch'. Either include it or remove the dependency array.",["168"],"React Hook useEffect has missing dependencies: 'mounted' and 'refetch'. Either include them or remove the dependency array. If 'refetch' changes too often, find the parent component that defines it and wrap that definition in useCallback.",["169"],"no-global-assign","no-unsafe-negation",{"desc":"170","fix":"171"},{"desc":"172","fix":"173"},{"desc":"174","fix":"175"},"Update the dependencies array to be: [refetch]",{"range":"176","text":"177"},"Update the dependencies array to be: [collection, dispatch, productID]",{"range":"178","text":"179"},"Update the dependencies array to be: [filters, mounted, refetch]",{"range":"180","text":"181"},[1127,1129],"[refetch]",[3227,3250],"[collection, dispatch, productID]",[1080,1089],"[filters, mounted, refetch]"]