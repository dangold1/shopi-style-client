[{"C:\\Users\\Dan Goldshtein\\Desktop\\Web Projects\\shopi-style\\client\\src\\index.js":"1","C:\\Users\\Dan Goldshtein\\Desktop\\Web Projects\\shopi-style\\client\\src\\App.js":"2","C:\\Users\\Dan Goldshtein\\Desktop\\Web Projects\\shopi-style\\client\\src\\store\\store.js":"3","C:\\Users\\Dan Goldshtein\\Desktop\\Web Projects\\shopi-style\\client\\src\\store\\reducers\\shoppingListReducer.js":"4","C:\\Users\\Dan Goldshtein\\Desktop\\Web Projects\\shopi-style\\client\\src\\store\\reducers\\productsReducer.js":"5","C:\\Users\\Dan Goldshtein\\Desktop\\Web Projects\\shopi-style\\client\\src\\utils\\keys.js":"6","C:\\Users\\Dan Goldshtein\\Desktop\\Web Projects\\shopi-style\\client\\src\\store\\reducers\\collectionReducer.js":"7","C:\\Users\\Dan Goldshtein\\Desktop\\Web Projects\\shopi-style\\client\\src\\store\\reducers\\searchReducer.js":"8","C:\\Users\\Dan Goldshtein\\Desktop\\Web Projects\\shopi-style\\client\\src\\routes\\PagesRouts.jsx":"9","C:\\Users\\Dan Goldshtein\\Desktop\\Web Projects\\shopi-style\\client\\src\\components\\CategoriesBarComponent\\CategoriesBarComponent.jsx":"10","C:\\Users\\Dan Goldshtein\\Desktop\\Web Projects\\shopi-style\\client\\src\\components\\AppBarComponent\\AppBarComponent.jsx":"11","C:\\Users\\Dan Goldshtein\\Desktop\\Web Projects\\shopi-style\\client\\src\\store\\constats\\productsConstants.js":"12","C:\\Users\\Dan Goldshtein\\Desktop\\Web Projects\\shopi-style\\client\\src\\store\\constats\\collectionConstants.js":"13","C:\\Users\\Dan Goldshtein\\Desktop\\Web Projects\\shopi-style\\client\\src\\store\\constats\\shoppingListConstants.js":"14","C:\\Users\\Dan Goldshtein\\Desktop\\Web Projects\\shopi-style\\client\\src\\store\\constats\\autoCompleteConstants.js":"15","C:\\Users\\Dan Goldshtein\\Desktop\\Web Projects\\shopi-style\\client\\src\\utils\\data.js":"16","C:\\Users\\Dan Goldshtein\\Desktop\\Web Projects\\shopi-style\\client\\src\\services\\dataTypes.service.js":"17","C:\\Users\\Dan Goldshtein\\Desktop\\Web Projects\\shopi-style\\client\\src\\services\\shoppingList.service.js":"18","C:\\Users\\Dan Goldshtein\\Desktop\\Web Projects\\shopi-style\\client\\src\\components\\AutoCompleteComponent\\AutoCompleteComponent.jsx":"19","C:\\Users\\Dan Goldshtein\\Desktop\\Web Projects\\shopi-style\\client\\src\\pages\\ProductPage\\ProductPage.jsx":"20","C:\\Users\\Dan Goldshtein\\Desktop\\Web Projects\\shopi-style\\client\\src\\pages\\HomePage\\HomePage.jsx":"21","C:\\Users\\Dan Goldshtein\\Desktop\\Web Projects\\shopi-style\\client\\src\\pages\\CollectionPage\\CollectionPage.jsx":"22","C:\\Users\\Dan Goldshtein\\Desktop\\Web Projects\\shopi-style\\client\\src\\pages\\ShoppingListPage\\ShoppingListPage.jsx":"23","C:\\Users\\Dan Goldshtein\\Desktop\\Web Projects\\shopi-style\\client\\src\\pages\\PaymentPage\\PaymentPage.jsx":"24","C:\\Users\\Dan Goldshtein\\Desktop\\Web Projects\\shopi-style\\client\\src\\store\\actions\\productsActions.js":"25","C:\\Users\\Dan Goldshtein\\Desktop\\Web Projects\\shopi-style\\client\\src\\store\\actions\\shoppingListActions.js":"26","C:\\Users\\Dan Goldshtein\\Desktop\\Web Projects\\shopi-style\\client\\src\\store\\actions\\collectionActions.js":"27","C:\\Users\\Dan Goldshtein\\Desktop\\Web Projects\\shopi-style\\client\\src\\components\\ExceptionComponents\\ExceptionComponents.jsx":"28","C:\\Users\\Dan Goldshtein\\Desktop\\Web Projects\\shopi-style\\client\\src\\components\\FooterComponent\\FooterComponent.jsx":"29","C:\\Users\\Dan Goldshtein\\Desktop\\Web Projects\\shopi-style\\client\\src\\components\\FiltersComponent\\FiltersComponent.jsx":"30","C:\\Users\\Dan Goldshtein\\Desktop\\Web Projects\\shopi-style\\client\\src\\components\\ProductCardComponent\\ProductCardComponent.jsx":"31","C:\\Users\\Dan Goldshtein\\Desktop\\Web Projects\\shopi-style\\client\\src\\hooks\\useMounted.js":"32","C:\\Users\\Dan Goldshtein\\Desktop\\Web Projects\\shopi-style\\client\\src\\hooks\\useCheckMobileScreen.js":"33"},{"size":342,"mtime":1611144452784,"results":"34","hashOfConfig":"35"},{"size":543,"mtime":1611274838770,"results":"36","hashOfConfig":"35"},{"size":1462,"mtime":1611134833078,"results":"37","hashOfConfig":"35"},{"size":1722,"mtime":1609853472943,"results":"38","hashOfConfig":"35"},{"size":799,"mtime":1609258727858,"results":"39","hashOfConfig":"35"},{"size":205,"mtime":1611249766465,"results":"40","hashOfConfig":"35"},{"size":694,"mtime":1615733485426,"results":"41","hashOfConfig":"35"},{"size":819,"mtime":1609692446096,"results":"42","hashOfConfig":"35"},{"size":1653,"mtime":1615736532044,"results":"43","hashOfConfig":"35"},{"size":2478,"mtime":1612733937227,"results":"44","hashOfConfig":"35"},{"size":6682,"mtime":1612724662799,"results":"45","hashOfConfig":"35"},{"size":479,"mtime":1609258520095,"results":"46","hashOfConfig":"35"},{"size":201,"mtime":1605728194293,"results":"47","hashOfConfig":"35"},{"size":380,"mtime":1609853471233,"results":"48","hashOfConfig":"35"},{"size":223,"mtime":1609258541202,"results":"49","hashOfConfig":"35"},{"size":308,"mtime":1611229215895,"results":"50","hashOfConfig":"35"},{"size":586,"mtime":1609075316877,"results":"51","hashOfConfig":"35"},{"size":422,"mtime":1609695006777,"results":"52","hashOfConfig":"35"},{"size":2564,"mtime":1612620336466,"results":"53","hashOfConfig":"35"},{"size":8517,"mtime":1615734437103,"results":"54","hashOfConfig":"35"},{"size":3686,"mtime":1615734462574,"results":"55","hashOfConfig":"35"},{"size":2198,"mtime":1615734438467,"results":"56","hashOfConfig":"35"},{"size":9240,"mtime":1615733870243,"results":"57","hashOfConfig":"35"},{"size":11860,"mtime":1612882262142,"results":"58","hashOfConfig":"35"},{"size":798,"mtime":1611229025171,"results":"59","hashOfConfig":"35"},{"size":1095,"mtime":1609858389320,"results":"60","hashOfConfig":"35"},{"size":632,"mtime":1611229020435,"results":"61","hashOfConfig":"35"},{"size":811,"mtime":1612952854373,"results":"62","hashOfConfig":"35"},{"size":1843,"mtime":1609766400698,"results":"63","hashOfConfig":"35"},{"size":3629,"mtime":1612694377315,"results":"64","hashOfConfig":"35"},{"size":2372,"mtime":1612880884121,"results":"65","hashOfConfig":"35"},{"size":255,"mtime":1605867620114,"results":"66","hashOfConfig":"35"},{"size":522,"mtime":1612282365385,"results":"67","hashOfConfig":"35"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"wszu5m",{"filePath":"70","messages":"71","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"72","messages":"73","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"74","messages":"75","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"76","messages":"77","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"78","messages":"79","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"80","messages":"81","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"82","messages":"83","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"84","messages":"85","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"86","messages":"87","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"88","messages":"89","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"90","messages":"91","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"92","messages":"93","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"94","messages":"95","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"96","messages":"97","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"98","messages":"99","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"100","messages":"101","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"102","messages":"103","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"104","messages":"105","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"106","messages":"107","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"108","usedDeprecatedRules":"109"},{"filePath":"110","messages":"111","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"112","usedDeprecatedRules":"109"},{"filePath":"113","messages":"114","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"115","usedDeprecatedRules":"109"},{"filePath":"116","messages":"117","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"109"},{"filePath":"118","messages":"119","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"120","usedDeprecatedRules":"109"},{"filePath":"121","messages":"122","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"123","messages":"124","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"125","messages":"126","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"127","messages":"128","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"129","usedDeprecatedRules":"109"},{"filePath":"130","messages":"131","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"109"},{"filePath":"132","messages":"133","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"134","usedDeprecatedRules":"109"},{"filePath":"135","messages":"136","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"109"},{"filePath":"137","messages":"138","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"139","messages":"140","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\Dan Goldshtein\\Desktop\\Web Projects\\shopi-style\\client\\src\\index.js",[],"C:\\Users\\Dan Goldshtein\\Desktop\\Web Projects\\shopi-style\\client\\src\\App.js",[],"C:\\Users\\Dan Goldshtein\\Desktop\\Web Projects\\shopi-style\\client\\src\\store\\store.js",[],"C:\\Users\\Dan Goldshtein\\Desktop\\Web Projects\\shopi-style\\client\\src\\store\\reducers\\shoppingListReducer.js",[],"C:\\Users\\Dan Goldshtein\\Desktop\\Web Projects\\shopi-style\\client\\src\\store\\reducers\\productsReducer.js",[],"C:\\Users\\Dan Goldshtein\\Desktop\\Web Projects\\shopi-style\\client\\src\\utils\\keys.js",[],"C:\\Users\\Dan Goldshtein\\Desktop\\Web Projects\\shopi-style\\client\\src\\store\\reducers\\collectionReducer.js",[],"C:\\Users\\Dan Goldshtein\\Desktop\\Web Projects\\shopi-style\\client\\src\\store\\reducers\\searchReducer.js",[],"C:\\Users\\Dan Goldshtein\\Desktop\\Web Projects\\shopi-style\\client\\src\\routes\\PagesRouts.jsx",[],"C:\\Users\\Dan Goldshtein\\Desktop\\Web Projects\\shopi-style\\client\\src\\components\\CategoriesBarComponent\\CategoriesBarComponent.jsx",[],"C:\\Users\\Dan Goldshtein\\Desktop\\Web Projects\\shopi-style\\client\\src\\components\\AppBarComponent\\AppBarComponent.jsx",["141"],"C:\\Users\\Dan Goldshtein\\Desktop\\Web Projects\\shopi-style\\client\\src\\store\\constats\\productsConstants.js",[],"C:\\Users\\Dan Goldshtein\\Desktop\\Web Projects\\shopi-style\\client\\src\\store\\constats\\collectionConstants.js",[],"C:\\Users\\Dan Goldshtein\\Desktop\\Web Projects\\shopi-style\\client\\src\\store\\constats\\shoppingListConstants.js",[],"C:\\Users\\Dan Goldshtein\\Desktop\\Web Projects\\shopi-style\\client\\src\\store\\constats\\autoCompleteConstants.js",[],"C:\\Users\\Dan Goldshtein\\Desktop\\Web Projects\\shopi-style\\client\\src\\utils\\data.js",[],"C:\\Users\\Dan Goldshtein\\Desktop\\Web Projects\\shopi-style\\client\\src\\services\\dataTypes.service.js",[],"C:\\Users\\Dan Goldshtein\\Desktop\\Web Projects\\shopi-style\\client\\src\\services\\shoppingList.service.js",[],"C:\\Users\\Dan Goldshtein\\Desktop\\Web Projects\\shopi-style\\client\\src\\components\\AutoCompleteComponent\\AutoCompleteComponent.jsx",[],"C:\\Users\\Dan Goldshtein\\Desktop\\Web Projects\\shopi-style\\client\\src\\pages\\ProductPage\\ProductPage.jsx",["142","143"],"import React, { useState, useEffect, Fragment } from \"react\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport { LoadingComponent } from \"../../components/ExceptionComponents/ExceptionComponents\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport {\r\n  fetchProductAction,\r\n  updateSelectedProductAction,\r\n} from \"../../store/actions/productsActions\";\r\nimport {\r\n  addNewProductToCartAction,\r\n  increaseProductAmountAction,\r\n  selectPaymentPageAction,\r\n} from \"../../store/actions/shoppingListActions\";\r\nimport {\r\n  Button,\r\n  Typography,\r\n  Card,\r\n  CardContent,\r\n  CardMedia,\r\n} from \"@material-ui/core\";\r\nimport {\r\n  capitalized,\r\n  capitalFirstLetter,\r\n} from \"../../services/dataTypes.service\";\r\nimport { cloneDeep } from \"lodash\";\r\nimport { isProductExists } from \"../../services/shoppingList.service\";\r\nimport { v4 as uuidv4 } from \"uuid\";\r\nimport ShoppingCartIcon from \"@material-ui/icons/ShoppingCart\";\r\nimport { useParams, useHistory } from \"react-router-dom\";\r\nimport Popover from \"@material-ui/core/Popover\";\r\n\r\nimport \"./ProductPage.css\";\r\nimport { Alert } from \"@material-ui/lab\";\r\nimport FavoriteBorder from \"@material-ui/icons/FavoriteBorder\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    marginTop: 30,\r\n    height: \"500\",\r\n    boxShadow: \"0px 0px 2px 2px rgba(0,0,0,0.2)\",\r\n    [theme.breakpoints.down(\"sm\")]: {\r\n      height: 500,\r\n    },\r\n  },\r\n  cardContainer: {\r\n    display: \"flex\",\r\n    flexDirection: \"row\",\r\n    justifyContent: \"space-around\",\r\n    paddingTop: \"40px\",\r\n    paddingBottom: \"40px\",\r\n    [theme.breakpoints.down(\"sm\")]: {\r\n      paddingTop: 20,\r\n      flexDirection: \"column\",\r\n      alignItems: \"center\",\r\n      marginTop: 0,\r\n    },\r\n  },\r\n  media: {\r\n    height: 400,\r\n    width: 400,\r\n    backgroundSize: \"contain\",\r\n    [theme.breakpoints.down(\"sm\")]: {\r\n      margin: 20,\r\n      border: 0,\r\n      borderRadius: 0,\r\n      height: 150,\r\n      width: 150,\r\n    },\r\n  },\r\n  title: {\r\n    fontFamily: \"Acme, sans-serif\",\r\n    [theme.breakpoints.down(\"sm\")]: {\r\n      marginTop: 10,\r\n      marginBottom: 10,\r\n      fontSize: 17,\r\n      flexWrap: \"wrap\",\r\n    },\r\n  },\r\n  details: {\r\n    display: \"flex\",\r\n    flexDirection: \"column\",\r\n    justifyContent: \"center\",\r\n    border: \"1px solid #ccc\",\r\n    borderRadius: \"25px\",\r\n    width: \"500px\",\r\n    [theme.breakpoints.down(\"sm\")]: {\r\n      border: 0,\r\n      borderRadius: 0,\r\n      marginTop: \"40px\",\r\n      height: 150,\r\n      width: \"100%\",\r\n    },\r\n  },\r\n  button: {\r\n    margin: 5,\r\n    width: \"230px\",\r\n    [theme.breakpoints.down(\"sm\")]: {\r\n      marin: \"0 auto\",\r\n      width: \"230px\",\r\n    },\r\n  },\r\n  popover: {\r\n    width: \"200px\",\r\n  },\r\n}));\r\n\r\nconst ProductPage = (props) => {\r\n  const classes = useStyles();\r\n  const { collection, productID } = useParams();\r\n  const { product: initProduct, isLoading } = useSelector(\r\n    (state) => state.product\r\n  );\r\n  const { shoppingList } = useSelector((state) => state.shoppingList);\r\n  const [product, setProduct] = useState(cloneDeep(initProduct));\r\n\r\n  const [anchorSuccessPopover, setSuccessPopover] = useState(null);\r\n  const [anchorErrorPopover, setErrorPopover] = useState(null);\r\n\r\n  const openSuccess = Boolean(anchorSuccessPopover);\r\n  const openError = Boolean(anchorErrorPopover);\r\n\r\n  const dispatch = useDispatch();\r\n\r\n  useEffect(() => {\r\n    dispatch(fetchProductAction(collection, productID));\r\n  }, [collection, productID]);\r\n\r\n  useEffect(() => {\r\n    if (initProduct) setProduct(cloneDeep(initProduct));\r\n  }, [initProduct]);\r\n\r\n  const onSizeClick = (event) => {\r\n    const newProduct = cloneDeep(product);\r\n    newProduct.selectedSize = event.target.value;\r\n    setProduct(newProduct);\r\n  };\r\n\r\n  const onAddToCartClick = (event) => {\r\n    if (!validateSize(product)) {\r\n      setErrorPopover(event.currentTarget);\r\n      return;\r\n    }\r\n    // isProductExists return isFound index\r\n    const productIndex = isProductExists(shoppingList, product);\r\n    if (productIndex !== -1) {\r\n      increaseProductAmount(productIndex);\r\n    } else {\r\n      addNewProductToCart(product);\r\n    }\r\n    setSuccessPopover(event.currentTarget);\r\n  };\r\n\r\n  const onBuyNowClick = (event, history) => {\r\n    if (!validateSize(product)) {\r\n      setErrorPopover(event.currentTarget);\r\n      return;\r\n    }\r\n    product.amount = 1;\r\n    dispatch(updateSelectedProductAction(product));\r\n    dispatch(selectPaymentPageAction(\"product-page\"));\r\n    history.push(\"/payment-page\");\r\n  };\r\n\r\n  const addNewProductToCart = (product) => {\r\n    product.uuid = uuidv4();\r\n    dispatch(addNewProductToCartAction(product));\r\n  };\r\n\r\n  const increaseProductAmount = (productIndex) => {\r\n    dispatch(increaseProductAmountAction(productIndex));\r\n  };\r\n\r\n  const validateSize = (product) =>\r\n    !(!product.selectedSize && product.sizes.length > 1);\r\n\r\n  let history = useHistory();\r\n\r\n  if (isLoading) {\r\n    return <div style={{ textAlign: \"center\" }}><LoadingComponent /></div>;\r\n  }\r\n\r\n  return (\r\n    <Card className={classes.root}>\r\n      {\r\n        <div className={classes.cardContainer}>\r\n          <CardMedia className={classes.media} image={product?.imageUrl} />\r\n          <CardContent className={classes.details}>\r\n            <Typography\r\n              gutterBottom\r\n              align=\"center\"\r\n              variant=\"h5\"\r\n              className={classes.title}\r\n            >\r\n              {capitalFirstLetter(`${product?.caption}`)}\r\n            </Typography>\r\n            {product?.sizes && product?.sizes.length > 1 && (\r\n              <Typography gutterBottom align=\"center\" variant=\"caption\">\r\n                {capitalized(\"select size\")}\r\n              </Typography>\r\n            )}\r\n            <div className=\"radio-buttons-group\">\r\n              {product?.sizes &&\r\n                product?.sizes.length > 1 &&\r\n                product?.sizes.map((size, i) => {\r\n                  if (typeof size === \"string\") {\r\n                    size = capitalized(size);\r\n                  }\r\n                  return (\r\n                    <label className=\"size-label\" key={\"size_label\" + i}>\r\n                      <input\r\n                        type=\"radio\"\r\n                        key={\"radio\" + i}\r\n                        name=\"size\"\r\n                        value={size}\r\n                        onClick={(event) => onSizeClick(event)}\r\n                      />\r\n                      <div className=\"radio-button\" key={\"radio_button\" + i}>\r\n                        {size}\r\n                      </div>\r\n                    </label>\r\n                  );\r\n                })}\r\n            </div>\r\n            <Typography gutterBottom align=\"center\" variant=\"subtitle1\">\r\n              {capitalFirstLetter(`${product?.price}$`)}\r\n            </Typography>\r\n            <div className=\"actions-buttons\">\r\n              <Button\r\n                className={classes.button}\r\n                id=\"buy-now\"\r\n                variant=\"contained\"\r\n                color=\"primary\"\r\n                startIcon={<ShoppingCartIcon />}\r\n                onClick={(event) => onBuyNowClick(event, history)}\r\n              >\r\n                Buy Now\r\n              </Button>\r\n              <Button\r\n                className={classes.button}\r\n                id=\"add-to-cart\"\r\n                variant=\"contained\"\r\n                color=\"secondary\"\r\n                startIcon={<FavoriteBorder />}\r\n                onClick={onAddToCartClick}\r\n              >\r\n                Add to cart\r\n              </Button>\r\n            </div>\r\n          </CardContent>\r\n        </div>\r\n      }\r\n      <Popover\r\n        id=\"success-popover\"\r\n        open={openSuccess}\r\n        anchorEl={anchorSuccessPopover}\r\n        onClose={() => setSuccessPopover(null)}\r\n        anchorOrigin={{\r\n          vertical: \"bottom\",\r\n          horizontal: \"center\",\r\n        }}\r\n        transformOrigin={{\r\n          vertical: \"top\",\r\n          horizontal: \"center\",\r\n        }}\r\n      >\r\n        <Alert severity=\"success\">Product Added.</Alert>\r\n      </Popover>\r\n      <Popover\r\n        id=\"success-popover\"\r\n        open={openError}\r\n        anchorEl={anchorErrorPopover}\r\n        onClose={() => setErrorPopover(null)}\r\n        anchorOrigin={{\r\n          vertical: \"bottom\",\r\n          horizontal: \"center\",\r\n        }}\r\n        transformOrigin={{\r\n          vertical: \"top\",\r\n          horizontal: \"center\",\r\n        }}\r\n      >\r\n        <Alert severity=\"error\">Please Select Size!</Alert>\r\n      </Popover>\r\n    </Card>\r\n  );\r\n};\r\n\r\nexport default ProductPage;\r\n",["144","145"],"C:\\Users\\Dan Goldshtein\\Desktop\\Web Projects\\shopi-style\\client\\src\\pages\\HomePage\\HomePage.jsx",["146"],"import React from \"react\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport { Container, CssBaseline, Grid, CardHeader } from \"@material-ui/core\";\r\nimport { Link } from \"react-router-dom\";\r\nimport Card from \"@material-ui/core/Card\";\r\nimport CardActionArea from \"@material-ui/core/CardActionArea\";\r\nimport CardMedia from \"@material-ui/core/CardMedia\";\r\nimport categories from \"../../utils/data\";\r\nimport { capitalFirstLetter } from \"../../services/dataTypes.service\";\r\nimport FooterComponent from \"../../components/FooterComponent/FooterComponent\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  backgroundImage: {\r\n    minHeight: \"100vh\",\r\n    backgroundImage: `url(${process.env.PUBLIC_URL}/assets/images/backgrounds/main.jpg)`,\r\n    backgroundPosition: \"center\",\r\n    backgroundRepeat: \"no-repeat\",\r\n    backgroundSize: \"cover\",\r\n    display: \"flex\",\r\n    justifyContent: \"center\",\r\n    alignItems: \"center\",\r\n  },\r\n  backgroundText: {\r\n    boxShadow: \"0px 0px 8px 8px rgba(0,0,0,0.2)\",\r\n    backgroundColor: \"rgb(0,0,0)\" /* Fallback color */,\r\n    backgroundColor: \"rgba(0,0,0, 0.4)\" /* Black w/opacity/see-through */,\r\n    color: \"white\",\r\n    fontSize: \"60px\",\r\n    fontFamily: \"Acme, sans-serif\",\r\n    border: \"3px solid #f1f1f1\",\r\n    position: \"absolute\",\r\n    top: \"270px\",\r\n    left: \"50%\",\r\n    transform: \"translate(-50%, -50%)\",\r\n    width: \"80%\",\r\n    padding: 20,\r\n    textAlign: \"center\",\r\n    [theme.breakpoints.down(\"sm\")]: {\r\n      width: \"95%\",\r\n      padding: 0,\r\n      top: \"230px\",\r\n    },\r\n  },\r\n  link: {\r\n    textDecoration: \"none !important\",\r\n  },\r\n  categoriesContainer: {\r\n    marginTop: 350,\r\n  },\r\n  card: {\r\n    minWidth: 200,\r\n    maxWidth: 400,\r\n    padding: 10,\r\n    boxShadow: \"0px 0px 8px 8px rgba(0,0,0,0.2)\",\r\n    transition: \"transform .2s ease-in-out\",\r\n    \"&:hover\": {\r\n      transform: \"scale(1.1)\",\r\n    },\r\n  },\r\n  cardHeader: {\r\n    textAlign: \"center\",\r\n    fontFamily: \"Acme, sans-serif\",\r\n    fontSize: 20,\r\n    color: \"black\",\r\n  },\r\n  cardMedia: {\r\n    height: 300,\r\n  },\r\n}));\r\n\r\nconst setImagePath = (filename) =>\r\n  `${process.env.PUBLIC_URL}/assets/images/categories/${filename}.jpg`;\r\n\r\nconst HomePage = (props) => {\r\n  const classes = useStyles();\r\n  return (\r\n    <>\r\n      <div className={classes.backgroundImage}>\r\n        <CssBaseline />\r\n        <h1 className={classes.backgroundText}>\r\n          Shopping From <br />\r\n          Anywhere.\r\n        </h1>\r\n        <Container className={classes.categoriesContainer}>\r\n          <Grid container spacing={4}>\r\n            {Object.keys(categories).map((category) =>\r\n              categories[category]?.map((subCategory, i) => (\r\n                <Grid item md={4} xs={12}>\r\n                  <Card className={classes.card}>\r\n                    <Link\r\n                      to={`/${subCategory}`}\r\n                      key={i}\r\n                      className={classes.link}\r\n                    >\r\n                      <CardHeader\r\n                        className={classes.cardHeader}\r\n                        titleTypographyProps={{ variant: \"inherit\" }}\r\n                        title={capitalFirstLetter(subCategory)}\r\n                      />\r\n                      <CardActionArea>\r\n                        <CardMedia\r\n                          className={classes.cardMedia}\r\n                          image={setImagePath(subCategory)}\r\n                        />\r\n                      </CardActionArea>\r\n                    </Link>\r\n                  </Card>\r\n                </Grid>\r\n              ))\r\n            )}\r\n          </Grid>\r\n        </Container>\r\n      </div>\r\n      <FooterComponent />\r\n    </>\r\n  );\r\n};\r\n\r\nexport default HomePage;\r\n","C:\\Users\\Dan Goldshtein\\Desktop\\Web Projects\\shopi-style\\client\\src\\pages\\CollectionPage\\CollectionPage.jsx",["147"],"import React, { useEffect } from \"react\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport FiltersComponent from \"../../components/FiltersComponent/FiltersComponent\";\r\nimport ProductCardComponent from \"../../components/ProductCardComponent/ProductCardComponent\";\r\nimport {\r\n  LoadingComponent,\r\n  ErrorComponent,\r\n} from \"../../components/ExceptionComponents/ExceptionComponents\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport { fetchCollectionAction } from \"../../store/actions/collectionActions\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  loading: {\r\n    marginTop: \"50px\",\r\n    display: \"flex\",\r\n    flexDirection: \"row\",\r\n    justifyContent: \"center\",\r\n  },\r\n  root: {\r\n    flexGrow: 1,\r\n    display: \"flex\",\r\n    flexDirection: \"column\",\r\n    justifyContent: \"center\",\r\n    marginTop: 10,\r\n  },\r\n  card: {\r\n    textAlign: \"center\",\r\n    color: theme.palette.text.secondary,\r\n  },\r\n}));\r\n\r\nconst CollectionPage = ({ subCategory }) => {\r\n  const classes = useStyles();\r\n  const { collection, isLoading, error } = useSelector(\r\n    (state) => state.collection\r\n  );\r\n  const dispatch = useDispatch();\r\n\r\n  useEffect(() => {\r\n    refetch();\r\n  }, []);\r\n\r\n  const refetch = (params) => {\r\n    dispatch(fetchCollectionAction(subCategory, params));\r\n  };\r\n\r\n  if (isLoading) {\r\n    return (\r\n      <div className={classes.loading}>\r\n        <LoadingComponent />\r\n      </div>\r\n    );\r\n  }\r\n\r\n  if (!collection) {\r\n    return <ErrorComponent message={error.message} />;\r\n  }\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      {collection?.products && (\r\n        <>\r\n          <FiltersComponent collection={collection} refetch={refetch} />\r\n          <Grid container spacing={1}>\r\n            {collection?.products?.map((product) => (\r\n              <Grid key={product._id} item xs={12} sm={3}>\r\n                <ProductCardComponent\r\n                  key={product._id}\r\n                  className={classes.card}\r\n                  product={product}\r\n                />\r\n              </Grid>\r\n            ))}\r\n          </Grid>\r\n        </>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default CollectionPage;\r\n","C:\\Users\\Dan Goldshtein\\Desktop\\Web Projects\\shopi-style\\client\\src\\pages\\ShoppingListPage\\ShoppingListPage.jsx",[],"C:\\Users\\Dan Goldshtein\\Desktop\\Web Projects\\shopi-style\\client\\src\\pages\\PaymentPage\\PaymentPage.jsx",["148","149"],"import React, { useState } from 'react';\r\nimport { makeStyles, withStyles } from '@material-ui/core/styles';\r\nimport {\r\n    Dialog,\r\n    DialogContent,\r\n    DialogContentText,\r\n    Table,\r\n    TableBody,\r\n    TableCell,\r\n    TableContainer,\r\n    TableHead,\r\n    TableRow\r\n} from '@material-ui/core';\r\nimport Container from '@material-ui/core/Container';\r\nimport { useSelector } from 'react-redux';\r\nimport { LoadingComponent } from '../../components/ExceptionComponents/ExceptionComponents';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport { cloneDeep } from 'lodash';\r\nimport { STRIPE_PUBLISH_KEY, BASE_API_URL } from '../../utils/keys';\r\nimport { loadStripe } from '@stripe/stripe-js';\r\nimport { Elements, CardElement, useStripe, useElements } from '@stripe/react-stripe-js';\r\nimport { Typography, Paper, Grid, Button, CssBaseline } from '@material-ui/core';\r\nimport axios from 'axios';\r\nimport MuiDialogTitle from '@material-ui/core/DialogTitle';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport CloseIcon from '@material-ui/icons/Close';\r\nimport useCheckMobileScreen from '../../hooks/useCheckMobileScreen';\r\n\r\nconst stripePromise = loadStripe(STRIPE_PUBLISH_KEY);\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n        marginTop: theme.spacing(5),\r\n        paddingBottom: '40px',\r\n    },\r\n    tableContainer: {\r\n        margin: '0 auto',\r\n        marginTop: theme.spacing(5),\r\n        marginBottom: theme.spacing(5),\r\n        width: '700px',\r\n    },\r\n    image: {\r\n        height: '100px',\r\n        width: '100px',\r\n        borderRadius: \"50%\",\r\n    },\r\n    centerTableCell: {\r\n        display: 'flex',\r\n        flexDirection: 'row',\r\n        justifyContent: 'center',\r\n    },\r\n    amountField: {\r\n        width: '50%',\r\n    },\r\n    paper: {\r\n        paddingTop: theme.spacing(3),\r\n        paddingRight: theme.spacing(8),\r\n        paddingLeft: theme.spacing(8),\r\n        paddingBottom: theme.spacing(3),\r\n    },\r\n    form: {\r\n        width: '700px',\r\n        margin: '0 auto',\r\n        [theme.breakpoints.down('sm')]:{\r\n            width: '320px',\r\n        },\r\n    },\r\n    paymentCard: {\r\n        margin: '20px',\r\n        [theme.breakpoints.down('sm')]:{\r\n            margin: 0,\r\n            marginTop: '20px',\r\n            marginBottom: '20px',\r\n            width:'110%',\r\n        },\r\n    }\r\n}));\r\n\r\n\r\nconst styles = (theme) => ({\r\n    root: {\r\n        margin: 0,\r\n        padding: theme.spacing(2),\r\n    },\r\n    closeButton: {\r\n        position: 'absolute',\r\n        right: theme.spacing(1),\r\n        top: theme.spacing(1),\r\n        color: theme.palette.grey[500],\r\n    },\r\n});\r\n\r\nconst DialogTitle = withStyles(styles)((props) => {\r\n    const { children, classes, onClose, ...other } = props;\r\n    return (\r\n        <MuiDialogTitle disableTypography className={classes.root} {...other}>\r\n            <Typography variant=\"h6\">{children}</Typography>\r\n            {onClose ? (\r\n                <IconButton aria-label=\"close\" className={classes.closeButton} onClick={onClose}>\r\n                    <CloseIcon />\r\n                </IconButton>\r\n            ) : null}\r\n        </MuiDialogTitle>\r\n    );\r\n});\r\n\r\nconst PaymentPage = props => {\r\n    const classes = useStyles();\r\n    const { product: initProduct, isLoading: productLoading } = useSelector(state => state.product);\r\n    const { shoppingList, isLoading: listLoading, paymentPage } = useSelector(state => state.shoppingList);\r\n    const [product, setProduct] = useState(cloneDeep(initProduct));\r\n\r\n    const onAmountChange = (event, product) => {\r\n        product.amount = event.target.value;\r\n        product.newPrice = product.amount * product.price;\r\n        setProduct(cloneDeep(product));\r\n    }\r\n    const isMobileMode = useCheckMobileScreen();\r\n    \r\n    return (\r\n        <Container >\r\n            {\r\n                productLoading || listLoading ? <LoadingComponent />\r\n                    : product && paymentPage === \"product-page\" && !isMobileMode &&\r\n                    (\r\n                        <TableContainer elevation={3} className={classes.tableContainer} component={Paper}>\r\n                            <Table className={classes.table} aria-label=\"simple table\">\r\n                                <TableHead>\r\n                                    <TableRow>\r\n                                        <TableCell align=\"center\">Image</TableCell>\r\n                                        <TableCell align=\"center\">Caption</TableCell>\r\n                                        <TableCell align=\"center\">Size</TableCell>\r\n                                        <TableCell align=\"center\">Amount</TableCell>\r\n                                        <TableCell align=\"center\">Price</TableCell>\r\n                                    </TableRow>\r\n                                </TableHead>\r\n                                <TableBody>\r\n                                    <TableRow key={product.uuid}>\r\n                                        <TableCell className={classes.centerTableCell} component=\"th\" scope=\"row\">\r\n                                            <img className={classes.image} src={product.imageUrl} />\r\n                                        </TableCell>\r\n                                        <TableCell align=\"center\">{product.caption}</TableCell>\r\n                                        <TableCell align=\"center\">{product.selectedSize ? product.selectedSize : \"-\"}</TableCell>\r\n                                        <TableCell align=\"center\">\r\n                                            <TextField\r\n                                                className={classes.amountField}\r\n                                                id=\"standard-number\"\r\n                                                inputProps={{ min: 1, style: { textAlign: 'center' } }}\r\n                                                type=\"number\"\r\n                                                defaultValue={product.amount}\r\n                                                onChange={event => onAmountChange(event, product)}\r\n                                            />\r\n                                        </TableCell>\r\n                                        <TableCell align=\"center\">\r\n                                            {`${product.newPrice ? product.newPrice : product.price}$`}\r\n                                        </TableCell>\r\n                                    </TableRow>\r\n                                </TableBody>\r\n                            </Table>\r\n                        </TableContainer>\r\n                    )\r\n            }\r\n            <Elements stripe={stripePromise}>\r\n                {product && paymentPage === \"product-page\" && <CheckoutForm items={[product]} />}\r\n                {shoppingList && paymentPage === \"shopping-list-page\" && <CheckoutForm items={shoppingList} />}\r\n            </Elements>\r\n        </Container>\r\n    );\r\n}\r\n\r\n\r\nconst CheckoutForm = ({ items }) => {\r\n    const classes = useStyles();\r\n    const stripe = useStripe();\r\n    const elements = useElements();\r\n    const [email, setEmail] = useState('');\r\n\r\n    const [openDialog, setOpenDialog] = useState(false);\r\n\r\n    const handleClickOpen = () => {\r\n        setOpenDialog(true);\r\n    };\r\n\r\n    const handleClose = () => {\r\n        setOpenDialog(false);\r\n    };\r\n\r\n    const totalPrice = items.reduce((acc, item) => acc + (item.amount * item.price), 0);\r\n\r\n    const onSubmit = async event => {\r\n        event.preventDefault();\r\n\r\n        const { error, paymentMethod } = await stripe.createPaymentMethod({\r\n            type: 'card',\r\n            card: elements.getElement(CardElement)\r\n        });\r\n\r\n        if (!error) {\r\n            const { id } = paymentMethod;\r\n            try {\r\n                const { data } = await axios.post(`${BASE_API_URL}/payment`, { id, amount: 1099 });\r\n                if (data.isConfirm) setOpenDialog(true);\r\n            } catch (err) {\r\n                console.log(err)\r\n            }\r\n        } else {\r\n            console.log(error)\r\n        }\r\n    }\r\n\r\n    const validateEmail = email => {\r\n        if (email === '') return true;\r\n        const regex = /^(([^<>()[\\]\\\\.,;:\\s@\"]+(\\.[^<>()[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\r\n        return regex.test(String(email).toLowerCase());\r\n    }\r\n\r\n    return (\r\n        <div className={classes.root}>\r\n            <form onSubmit={onSubmit} className={classes.form}>\r\n                <Paper elevation={5} className={classes.paper}>\r\n                    <Grid container spacing={3}>\r\n                        <Grid item xs={12}>\r\n                            <Grid container spacing={2}>\r\n                                <Grid item xs={12}><Typography >Total Charges: {totalPrice}$</Typography></Grid>\r\n                                <Grid item xs={12}>\r\n                                    <TextField\r\n                                        fullWidth\r\n                                        label=\"Full Name\"\r\n                                        name=\"full-name\"\r\n                                        size=\"small\"\r\n                                        variant=\"outlined\"\r\n                                        required\r\n                                    />\r\n                                </Grid>\r\n                                <Grid item xs={12}>\r\n                                    <TextField\r\n                                        fullWidth\r\n                                        label=\"Email\"\r\n                                        name=\"email\"\r\n                                        size=\"small\"\r\n                                        variant=\"outlined\"\r\n                                        required\r\n                                        error={!validateEmail(email)}\r\n                                        onChange={event => setEmail(event.target.value)}\r\n                                    />\r\n                                </Grid>\r\n                                <Grid item xs={12}>\r\n                                    <TextField\r\n                                        fullWidth\r\n                                        label=\"Delivery Address\"\r\n                                        name=\"address\"\r\n                                        size=\"small\"\r\n                                        variant=\"outlined\"\r\n                                        required\r\n                                    />\r\n                                </Grid>\r\n                            </Grid>\r\n                        </Grid>\r\n                    </Grid>\r\n                    <CssBaseline />\r\n                    <CardElement className={classes.paymentCard} />\r\n                    <Grid item xs={12}>\r\n                        <Button\r\n                            color=\"primary\"\r\n                            fullWidth\r\n                            disabled={!stripe}\r\n                            type=\"submit\"\r\n                            variant=\"contained\">\r\n                            Pay\r\n                    </Button>\r\n                    </Grid>\r\n                    <Dialog\r\n                        open={openDialog}\r\n                        onClose={handleClose}\r\n                    >\r\n                        <DialogTitle id=\"alert-dialog-title\" onClose={handleClose}>\r\n                            Payment Confirmation\r\n                        </DialogTitle>\r\n                        <DialogContent dividers>\r\n                            <DialogContentText id=\"dialog\">\r\n                                This is a dummy payment. Payment process is still in development.\r\n                                </DialogContentText>\r\n                        </DialogContent>\r\n                    </Dialog>\r\n                </Paper>\r\n            </form >\r\n        </div >\r\n    )\r\n}\r\n\r\nexport default PaymentPage;","C:\\Users\\Dan Goldshtein\\Desktop\\Web Projects\\shopi-style\\client\\src\\store\\actions\\productsActions.js",[],"C:\\Users\\Dan Goldshtein\\Desktop\\Web Projects\\shopi-style\\client\\src\\store\\actions\\shoppingListActions.js",[],"C:\\Users\\Dan Goldshtein\\Desktop\\Web Projects\\shopi-style\\client\\src\\store\\actions\\collectionActions.js",[],"C:\\Users\\Dan Goldshtein\\Desktop\\Web Projects\\shopi-style\\client\\src\\components\\ExceptionComponents\\ExceptionComponents.jsx",["150","151"],"import React, { useState, useEffect } from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport CircularProgress from '@material-ui/core/CircularProgress';\r\nimport { Alert, AlertTitle } from '@material-ui/lab';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  error: {\r\n    width: '100%',\r\n    '& > * + *': {\r\n      marginTop: theme.spacing(2),\r\n    }\r\n  },\r\n}));\r\n\r\n\r\nexport const LoadingComponent = () => <CircularProgress />\r\n\r\nexport const ErrorComponent = ({ message }) => {\r\n  const classes = useStyles();\r\n  return (\r\n    <div className={classes.error}>\r\n      <Alert severity=\"error\" elevation={6} variant=\"filled\">\r\n        <AlertTitle>Error</AlertTitle>\r\n        {message ? <strong>{message}</strong> : <strong>check which error</strong>}\r\n      </Alert>\r\n    </div>\r\n  );\r\n}\r\n\r\n\r\n","C:\\Users\\Dan Goldshtein\\Desktop\\Web Projects\\shopi-style\\client\\src\\components\\FooterComponent\\FooterComponent.jsx",[],"C:\\Users\\Dan Goldshtein\\Desktop\\Web Projects\\shopi-style\\client\\src\\components\\FiltersComponent\\FiltersComponent.jsx",["152"],"import React, { useState, useEffect } from 'react'\r\nimport './FiltersComponent.css';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Select from 'react-select';\r\nimport { mapOptions } from '../../services/dataTypes.service';\r\nimport { cloneDeep } from 'lodash'\r\nimport useMounted from '../../hooks/useMounted';\r\n\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    selector: {\r\n        margin: theme.spacing(1),\r\n        minWidth: 200,\r\n        maxWidth: 200,\r\n        [theme.breakpoints.down('sm')]: {\r\n            minWidth: '90%',\r\n            maxWidth: '90%',\r\n            marginLeft: 15,\r\n            marginRight: 15\r\n        },\r\n    },\r\n}));\r\n\r\nconst initialFilters = {\r\n    gender: '',\r\n    types: [],\r\n    colors: [],\r\n    priceRange: [],\r\n}\r\n\r\nconst FiltersComponent = ({ collection, refetch }) => {\r\n    const classes = useStyles();\r\n    const mounted = useMounted();\r\n    const [filters, setFilters] = useState(initialFilters);\r\n\r\n    useEffect(() => {\r\n        if (!mounted) return;\r\n        refetch(filters);\r\n    }, [filters])\r\n\r\n    const updateFilters = ({ key, value }) => setFilters(prev => {\r\n        prev = cloneDeep(prev);\r\n        prev[key] = value;\r\n        return prev;\r\n    })\r\n\r\n    const onGenderChange = (item) => updateFilters({ key: 'gender', value: item.value || '' });\r\n\r\n    const onTypeChange = (items, options) => {\r\n        let list = [];\r\n        if (options.action === \"remove-value\") {\r\n            list = filters.types.filter(i => i !== options.removedValue.value);\r\n        } else {\r\n            list = items ? items.map(i => i.value) : [];\r\n        }\r\n        updateFilters({ key: 'types', value: list });\r\n    }\r\n\r\n    const onColorChange = (items, options) => {\r\n        let list = [];\r\n        if (options.action === \"remove-value\") {\r\n            list = filters.colors.filter(i => i !== options.removedValue.value);\r\n        } else {\r\n            list = items ? items.map(i => i.value) : [];\r\n        }\r\n        updateFilters({ key: 'colors', value: list });\r\n    }\r\n\r\n    return (\r\n        <div className='filters-container'>\r\n            {\r\n                collection.subCategory.genders.length > 1 &&\r\n                <Select\r\n                    className={classes.selector}\r\n                    placeholder=\"Gender\"\r\n                    options={mapOptions(collection.subCategory.genders)}\r\n                    onChange={onGenderChange}\r\n                />\r\n            }\r\n            {\r\n                collection.subCategory.types.length > 1 &&\r\n                <Select\r\n                    className={classes.selector}\r\n                    isMulti\r\n                    placeholder=\"Types\"\r\n                    options={mapOptions(collection.subCategory.types)}\r\n                    onChange={onTypeChange}\r\n                />\r\n            }\r\n            {\r\n                <Select\r\n                    className={classes.selector}\r\n                    closeMenuOnSelect={false}\r\n                    isMulti\r\n                    placeholder=\"Colors\"\r\n                    options={mapOptions(collection.colorsOptions)}\r\n                    onChange={onColorChange}\r\n                />\r\n            }\r\n            {\r\n                // <Select\r\n                //     className={classes.selector}\r\n                //     isMulti\r\n                //     placeholder=\"Price Range\"\r\n                //     options={mapOptions(collection.priceOptions)}\r\n                //     onChange={items => updateFilters({ key: 'priceRange', value: items.map(i => i.value) })}\r\n                // />\r\n            }\r\n        </div >\r\n    )\r\n}\r\n\r\nexport default FiltersComponent;\r\n","C:\\Users\\Dan Goldshtein\\Desktop\\Web Projects\\shopi-style\\client\\src\\components\\ProductCardComponent\\ProductCardComponent.jsx",[],"C:\\Users\\Dan Goldshtein\\Desktop\\Web Projects\\shopi-style\\client\\src\\hooks\\useMounted.js",[],"C:\\Users\\Dan Goldshtein\\Desktop\\Web Projects\\shopi-style\\client\\src\\hooks\\useCheckMobileScreen.js",[],{"ruleId":"153","severity":1,"message":"154","line":170,"column":15,"nodeType":"155","endLine":170,"endColumn":117},{"ruleId":"156","severity":1,"message":"157","line":1,"column":38,"nodeType":"158","messageId":"159","endLine":1,"endColumn":46},{"ruleId":"160","severity":1,"message":"161","line":126,"column":6,"nodeType":"162","endLine":126,"endColumn":29,"suggestions":"163"},{"ruleId":"164","replacedBy":"165"},{"ruleId":"166","replacedBy":"167"},{"ruleId":"168","severity":1,"message":"169","line":26,"column":5,"nodeType":"170","messageId":"171","endLine":26,"endColumn":20},{"ruleId":"160","severity":1,"message":"172","line":42,"column":6,"nodeType":"162","endLine":42,"endColumn":8,"suggestions":"173"},{"ruleId":"153","severity":1,"message":"154","line":140,"column":45,"nodeType":"155","endLine":140,"endColumn":101},{"ruleId":"156","severity":1,"message":"174","line":180,"column":11,"nodeType":"158","messageId":"159","endLine":180,"endColumn":26},{"ruleId":"156","severity":1,"message":"175","line":1,"column":17,"nodeType":"158","messageId":"159","endLine":1,"endColumn":25},{"ruleId":"156","severity":1,"message":"176","line":1,"column":27,"nodeType":"158","messageId":"159","endLine":1,"endColumn":36},{"ruleId":"160","severity":1,"message":"177","line":39,"column":8,"nodeType":"162","endLine":39,"endColumn":17,"suggestions":"178"},"jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","no-unused-vars","'Fragment' is defined but never used.","Identifier","unusedVar","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'dispatch'. Either include it or remove the dependency array.","ArrayExpression",["179"],"no-native-reassign",["180"],"no-negated-in-lhs",["181"],"no-dupe-keys","Duplicate key 'backgroundColor'.","ObjectExpression","unexpected","React Hook useEffect has a missing dependency: 'refetch'. Either include it or remove the dependency array.",["182"],"'handleClickOpen' is assigned a value but never used.","'useState' is defined but never used.","'useEffect' is defined but never used.","React Hook useEffect has missing dependencies: 'mounted' and 'refetch'. Either include them or remove the dependency array. If 'refetch' changes too often, find the parent component that defines it and wrap that definition in useCallback.",["183"],{"desc":"184","fix":"185"},"no-global-assign","no-unsafe-negation",{"desc":"186","fix":"187"},{"desc":"188","fix":"189"},"Update the dependencies array to be: [collection, dispatch, productID]",{"range":"190","text":"191"},"Update the dependencies array to be: [refetch]",{"range":"192","text":"193"},"Update the dependencies array to be: [filters, mounted, refetch]",{"range":"194","text":"195"},[3409,3432],"[collection, dispatch, productID]",[1233,1235],"[refetch]",[1044,1053],"[filters, mounted, refetch]"]