[{"C:\\Users\\Dan Goldshtein\\Desktop\\shopi-style\\client\\src\\index.js":"1","C:\\Users\\Dan Goldshtein\\Desktop\\shopi-style\\client\\src\\App.js":"2","C:\\Users\\Dan Goldshtein\\Desktop\\shopi-style\\client\\src\\store\\store.js":"3","C:\\Users\\Dan Goldshtein\\Desktop\\shopi-style\\client\\src\\utils\\keys.js":"4","C:\\Users\\Dan Goldshtein\\Desktop\\shopi-style\\client\\src\\store\\reducers\\searchReducer.js":"5","C:\\Users\\Dan Goldshtein\\Desktop\\shopi-style\\client\\src\\store\\reducers\\productsReducer.js":"6","C:\\Users\\Dan Goldshtein\\Desktop\\shopi-style\\client\\src\\store\\reducers\\collectionReducer.js":"7","C:\\Users\\Dan Goldshtein\\Desktop\\shopi-style\\client\\src\\store\\reducers\\shoppingListReducer.js":"8","C:\\Users\\Dan Goldshtein\\Desktop\\shopi-style\\client\\src\\routes\\PagesRouts.jsx":"9","C:\\Users\\Dan Goldshtein\\Desktop\\shopi-style\\client\\src\\components\\AppBarComponent\\AppBarComponent.jsx":"10","C:\\Users\\Dan Goldshtein\\Desktop\\shopi-style\\client\\src\\components\\CategoriesBarComponent\\CategoriesBarComponent.jsx":"11","C:\\Users\\Dan Goldshtein\\Desktop\\shopi-style\\client\\src\\store\\constats\\autoCompleteConstants.js":"12","C:\\Users\\Dan Goldshtein\\Desktop\\shopi-style\\client\\src\\store\\constats\\collectionConstants.js":"13","C:\\Users\\Dan Goldshtein\\Desktop\\shopi-style\\client\\src\\store\\constats\\productsConstants.js":"14","C:\\Users\\Dan Goldshtein\\Desktop\\shopi-style\\client\\src\\store\\constats\\shoppingListConstants.js":"15","C:\\Users\\Dan Goldshtein\\Desktop\\shopi-style\\client\\src\\services\\shoppingList.service.js":"16","C:\\Users\\Dan Goldshtein\\Desktop\\shopi-style\\client\\src\\services\\dataTypes.service.js":"17","C:\\Users\\Dan Goldshtein\\Desktop\\shopi-style\\client\\src\\components\\AutoCompleteComponent\\AutoCompleteComponent.jsx":"18","C:\\Users\\Dan Goldshtein\\Desktop\\shopi-style\\client\\src\\pages\\ProductPage\\ProductPage.jsx":"19","C:\\Users\\Dan Goldshtein\\Desktop\\shopi-style\\client\\src\\pages\\CollectionPage\\CollectionPage.jsx":"20","C:\\Users\\Dan Goldshtein\\Desktop\\shopi-style\\client\\src\\pages\\HomePage\\HomePage.jsx":"21","C:\\Users\\Dan Goldshtein\\Desktop\\shopi-style\\client\\src\\pages\\ShoppingListPage\\ShoppingListPage.jsx":"22","C:\\Users\\Dan Goldshtein\\Desktop\\shopi-style\\client\\src\\pages\\PaymentPage\\PaymentPage.jsx":"23","C:\\Users\\Dan Goldshtein\\Desktop\\shopi-style\\client\\src\\store\\actions\\productsActions.js":"24","C:\\Users\\Dan Goldshtein\\Desktop\\shopi-style\\client\\src\\store\\actions\\collectionActions.js":"25","C:\\Users\\Dan Goldshtein\\Desktop\\shopi-style\\client\\src\\store\\actions\\shoppingListActions.js":"26","C:\\Users\\Dan Goldshtein\\Desktop\\shopi-style\\client\\src\\components\\ExceptionComponents\\ExceptionComponents.jsx":"27","C:\\Users\\Dan Goldshtein\\Desktop\\shopi-style\\client\\src\\components\\FiltersComponent\\FiltersComponent.jsx":"28","C:\\Users\\Dan Goldshtein\\Desktop\\shopi-style\\client\\src\\components\\ProductCardComponent\\ProductCardComponent.jsx":"29","C:\\Users\\Dan Goldshtein\\Desktop\\shopi-style\\client\\src\\components\\FooterComponent\\FooterComponent.jsx":"30","C:\\Users\\Dan Goldshtein\\Desktop\\shopi-style\\client\\src\\hooks\\useMounted.js":"31","C:\\Users\\Dan Goldshtein\\Desktop\\shopi-style\\client\\src\\utils\\data.js":"32"},{"size":342,"mtime":1611144452784,"results":"33","hashOfConfig":"34"},{"size":543,"mtime":1610637276371,"results":"35","hashOfConfig":"34"},{"size":1462,"mtime":1611134833078,"results":"36","hashOfConfig":"34"},{"size":205,"mtime":1611249766465,"results":"37","hashOfConfig":"34"},{"size":819,"mtime":1609692446096,"results":"38","hashOfConfig":"34"},{"size":799,"mtime":1609258727858,"results":"39","hashOfConfig":"34"},{"size":694,"mtime":1609665222010,"results":"40","hashOfConfig":"34"},{"size":1722,"mtime":1609853472943,"results":"41","hashOfConfig":"34"},{"size":1549,"mtime":1611229227801,"results":"42","hashOfConfig":"34"},{"size":8107,"mtime":1611229243446,"results":"43","hashOfConfig":"34"},{"size":1907,"mtime":1611229241675,"results":"44","hashOfConfig":"34"},{"size":223,"mtime":1609258541202,"results":"45","hashOfConfig":"34"},{"size":201,"mtime":1605728194293,"results":"46","hashOfConfig":"34"},{"size":479,"mtime":1609258520095,"results":"47","hashOfConfig":"34"},{"size":380,"mtime":1609853471233,"results":"48","hashOfConfig":"34"},{"size":422,"mtime":1609695006777,"results":"49","hashOfConfig":"34"},{"size":586,"mtime":1609075316877,"results":"50","hashOfConfig":"34"},{"size":2564,"mtime":1611247637467,"results":"51","hashOfConfig":"34"},{"size":10407,"mtime":1610637303279,"results":"52","hashOfConfig":"34"},{"size":2483,"mtime":1610637251788,"results":"53","hashOfConfig":"34"},{"size":4318,"mtime":1611229233411,"results":"54","hashOfConfig":"34"},{"size":10778,"mtime":1611134359071,"results":"55","hashOfConfig":"34"},{"size":11536,"mtime":1611229006701,"results":"56","hashOfConfig":"34"},{"size":798,"mtime":1611229025171,"results":"57","hashOfConfig":"34"},{"size":632,"mtime":1611229020435,"results":"58","hashOfConfig":"34"},{"size":1095,"mtime":1609858389320,"results":"59","hashOfConfig":"34"},{"size":1099,"mtime":1609630850141,"results":"60","hashOfConfig":"34"},{"size":3456,"mtime":1608224022140,"results":"61","hashOfConfig":"34"},{"size":2336,"mtime":1609852869446,"results":"62","hashOfConfig":"34"},{"size":1843,"mtime":1609766400698,"results":"63","hashOfConfig":"34"},{"size":255,"mtime":1605867620114,"results":"64","hashOfConfig":"34"},{"size":308,"mtime":1611229215895,"results":"65","hashOfConfig":"34"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},"ycz4yd",{"filePath":"69","messages":"70","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"73","messages":"74","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"75","messages":"76","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"77","messages":"78","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"79","messages":"80","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"81","messages":"82","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"83","messages":"84","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"85","messages":"86","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"87","usedDeprecatedRules":"68"},{"filePath":"88","messages":"89","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"90","usedDeprecatedRules":"68"},{"filePath":"91","messages":"92","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"93","messages":"94","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"95","messages":"96","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"97","messages":"98","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"99","messages":"100","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"101","messages":"102","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"103","messages":"104","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"105","messages":"106","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"107","usedDeprecatedRules":"68"},{"filePath":"108","messages":"109","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"110","usedDeprecatedRules":"68"},{"filePath":"111","messages":"112","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"113","usedDeprecatedRules":"68"},{"filePath":"114","messages":"115","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"116","messages":"117","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"118","usedDeprecatedRules":"68"},{"filePath":"119","messages":"120","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"121","messages":"122","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"123","messages":"124","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"125","messages":"126","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"127","usedDeprecatedRules":"68"},{"filePath":"128","messages":"129","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"130","usedDeprecatedRules":"68"},{"filePath":"131","messages":"132","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"133","messages":"134","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"135","messages":"136","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"137","messages":"138","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},"C:\\Users\\Dan Goldshtein\\Desktop\\shopi-style\\client\\src\\index.js",[],["139","140"],"C:\\Users\\Dan Goldshtein\\Desktop\\shopi-style\\client\\src\\App.js",[],"C:\\Users\\Dan Goldshtein\\Desktop\\shopi-style\\client\\src\\store\\store.js",[],"C:\\Users\\Dan Goldshtein\\Desktop\\shopi-style\\client\\src\\utils\\keys.js",[],"C:\\Users\\Dan Goldshtein\\Desktop\\shopi-style\\client\\src\\store\\reducers\\searchReducer.js",[],"C:\\Users\\Dan Goldshtein\\Desktop\\shopi-style\\client\\src\\store\\reducers\\productsReducer.js",[],"C:\\Users\\Dan Goldshtein\\Desktop\\shopi-style\\client\\src\\store\\reducers\\collectionReducer.js",[],"C:\\Users\\Dan Goldshtein\\Desktop\\shopi-style\\client\\src\\store\\reducers\\shoppingListReducer.js",[],"C:\\Users\\Dan Goldshtein\\Desktop\\shopi-style\\client\\src\\routes\\PagesRouts.jsx",[],"C:\\Users\\Dan Goldshtein\\Desktop\\shopi-style\\client\\src\\components\\AppBarComponent\\AppBarComponent.jsx",["141","142","143","144","145","146","147","148"],"import React, { useState, useEffect } from 'react';\r\nimport { useSelector } from 'react-redux';\r\nimport { Link } from \"react-router-dom\";\r\nimport { fade, makeStyles } from '@material-ui/core/styles';\r\nimport { AppBar, Toolbar, IconButton, Badge, MenuItem, Menu, TextField, Tooltip } from '@material-ui/core';\r\nimport HomeIcon from '@material-ui/icons/Home';\r\nimport AccountCircleIcon from '@material-ui/icons/AccountCircle';\r\nimport MoreVertIcon from '@material-ui/icons/MoreVert';\r\nimport ShoppingCartIcon from '@material-ui/icons/ShoppingCart';\r\nimport AddShoppingCartIcon from '@material-ui/icons/AddShoppingCart';\r\nimport AutoCompleteComponent from '../AutoCompleteComponent/AutoCompleteComponent';\r\nimport { getProductsAmount } from '../../services/shoppingList.service';\r\n\r\n// ---------------------------------- useStyles ----------------------------------\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  grow: {\r\n    flexGrow: 1,\r\n  },\r\n  appBar: {\r\n    backgroundColor: '#212121'\r\n  },\r\n  link: {\r\n    color: 'white',\r\n    textDecoration: 'none',\r\n  },\r\n  title: {\r\n    display: 'none',\r\n    [theme.breakpoints.up('sm')]: {\r\n      display: 'block',\r\n    },\r\n  },\r\n  appBarLogo: {\r\n    padding: '5px',\r\n    paddingTop: '15px',\r\n    transition: 'transform .2s ease-in-out',\r\n    \"&:hover\": {\r\n      transform: 'scale(1.1)',\r\n    }\r\n  },\r\n  searchIcon: {\r\n    padding: theme.spacing(0, 2),\r\n    height: '100%',\r\n    position: 'absolute',\r\n    pointerEvents: 'none',\r\n    display: 'flex',\r\n    alignItems: 'center',\r\n    justifyContent: 'center',\r\n  },\r\n  inputRoot: {\r\n    color: 'inherit',\r\n  },\r\n  inputInput: {\r\n    padding: theme.spacing(1, 7, 1, 0),\r\n    // vertical padding + font size from searchIcon\r\n    paddingLeft: `calc(1em + ${theme.spacing(4)}px)`,\r\n    transition: theme.transitions.create('width'),\r\n    width: '100%',\r\n    [theme.breakpoints.up('md')]: {\r\n      width: '20ch',\r\n    },\r\n  },\r\n  autoCompleteRoot: {\r\n    width: '600px',\r\n    backgroundColor: fade(theme.palette.common.white, 0.15),\r\n    '&:hover': {\r\n      backgroundColor: fade(theme.palette.common.white, 0.25),\r\n    },\r\n  },\r\n  autoCompleteLabel: {\r\n    \"&$autoCompleteFocusedLabel\": {\r\n      color: \"white\"\r\n    },\r\n  },\r\n  autoCompleteFocusedLabel: {},\r\n  list: {\r\n    width: 250,\r\n  },\r\n  textFieldRoot: {\r\n    color: \"white\"\r\n  },\r\n  notchedOutline: {\r\n    borderWidth: \"0.5px\",\r\n    borderColor: \"white !important\"\r\n  },\r\n  fullList: {\r\n    width: 'auto',\r\n  },\r\n  sectionDesktop: {\r\n    display: 'none',\r\n    [theme.breakpoints.up('md')]: {\r\n      display: 'flex',\r\n    },\r\n  },\r\n  sectionMobile: {\r\n    display: 'flex',\r\n    [theme.breakpoints.up('md')]: {\r\n      display: 'none',\r\n    },\r\n  },\r\n}));\r\n\r\n// ---------------------------------- Constants ----------------------------------\r\n\r\nconst AppBarComponent = props => {\r\n  const classes = useStyles();\r\n  const { shoppingList } = useSelector(state => state.shoppingList);\r\n\r\n  // const [anchorEl, setAnchorEl] = useState(null);\r\n  // const [mobileMoreAnchorEl, setMobileMoreAnchorEl] = useState(null);\r\n\r\n  // const isMenuOpen = Boolean(anchorEl);\r\n  // const isMobileMenuOpen = Boolean(mobileMoreAnchorEl);\r\n\r\n  // const onMobileMenuOpen = (event) => { setMobileMoreAnchorEl(event.currentTarget); };\r\n\r\n  // const onMenuClose = () => {\r\n  //   setAnchorEl(null);\r\n  //   onMobileMenuClose();\r\n  // };\r\n\r\n  // const onMobileMenuClose = () => { setMobileMoreAnchorEl(null); };\r\n  // const onProfileMenuOpen = (event) => { setAnchorEl(event.currentTarget); };\r\n\r\n  // ---------------------------------- Render AppBarComponent ----------------------------------\r\n  return (\r\n    <div className={classes.grow}>\r\n      <AppBar position=\"static\" className={classes.appBar}>\r\n        <Toolbar>\r\n          <Link to=\"/\">\r\n            <img className={classes.appBarLogo} src={`${process.env.PUBLIC_URL}/assets/logos/logo-smaller.png`} />\r\n          </Link>\r\n          <AutoCompleteComponent />\r\n        <div className={classes.grow} />\r\n        <div className={classes.sectionDesktop}>\r\n          <Link to=\"/\" className={classes.link}>\r\n            <Tooltip title=\"Home\">\r\n              <IconButton aria-label=\"home\" color=\"inherit\">\r\n                <Badge color=\"secondary\">\r\n                  <HomeIcon />\r\n                </Badge>\r\n              </IconButton>\r\n            </Tooltip>\r\n          </Link>\r\n          <Link to=\"/shopping-list\" className={classes.link}>\r\n            <Tooltip title=\"Cart\">\r\n              <IconButton aria-label=\"cart-notifications\" color=\"inherit\">\r\n                {!shoppingList.length && <AddShoppingCartIcon />}\r\n                {\r\n                  shoppingList.length &&\r\n                  <Badge badgeContent={getProductsAmount(shoppingList)} color=\"secondary\">\r\n                    <ShoppingCartIcon />\r\n                  </Badge>\r\n                }\r\n              </IconButton>\r\n            </Tooltip>\r\n          </Link>\r\n          {/* <Tooltip title=\"Account\">\r\n              <IconButton\r\n                edge=\"end\"\r\n                aria-label=\"account of current user\"\r\n                aria-controls={menuId}\r\n                aria-haspopup=\"true\"\r\n                onClick={onProfileMenuOpen}\r\n                color=\"inherit\"\r\n              >\r\n                <AccountCircleIcon />\r\n              </IconButton>\r\n            </Tooltip> */}\r\n        </div>\r\n        {/* <div className={classes.sectionMobile}>\r\n            <IconButton\r\n              aria-label=\"show more\"\r\n              aria-controls={mobileMenuId}\r\n              aria-haspopup=\"true\"\r\n              onClick={onMobileMenuOpen}\r\n              color=\"inherit\"\r\n            >\r\n              <MoreVertIcon />\r\n            </IconButton>\r\n          </div> */}\r\n        </Toolbar>\r\n      </AppBar>\r\n      {/* { renderMobileMenu} */ }\r\n  {/* { renderMenu} */ }\r\n    </div >\r\n  );\r\n\r\n\r\n  // const menuId = 'primary-search-account-menu';\r\n  // const mobileMenuId = 'primary-search-account-menu-mobile';\r\n\r\n  // ---------------------------------- renderMenu ----------------------------------\r\n\r\n  // const renderMenu = (\r\n  //   <Menu\r\n  //     anchorEl={anchorEl}\r\n  //     anchorOrigin={{ vertical: 'top', horizontal: 'right' }}\r\n  //     id={menuId}\r\n  //     keepMounted\r\n  //     transformOrigin={{ vertical: 'top', horizontal: 'right' }}\r\n  //     open={isMenuOpen}\r\n  //     onClose={onMenuClose}\r\n  //   >\r\n  //     <MenuItem onClick={onMenuClose}>Sign In</MenuItem>\r\n  //     <MenuItem onClick={onMenuClose}>Register</MenuItem>\r\n  //   </Menu>\r\n  // );\r\n\r\n\r\n  // ---------------------------------- renderMobileMenu ----------------------------------\r\n\r\n  // const renderMobileMenu = (\r\n  //   <Menu\r\n  //     anchorEl={mobileMoreAnchorEl}\r\n  //     anchorOrigin={{ vertical: 'top', horizontal: 'right' }}\r\n  //     id={mobileMenuId}\r\n  //     keepMounted\r\n  //     transformOrigin={{ vertical: 'top', horizontal: 'right' }}\r\n  //     open={isMobileMenuOpen}\r\n  //     onClose={onMobileMenuClose}\r\n  //   >\r\n  //     <MenuItem onClick={onMobileMenuClose}>\r\n  //       <IconButton aria-label=\"home\" color=\"inherit\">\r\n  //         <Badge color=\"secondary\">\r\n  //           <HomeIcon />\r\n  //         </Badge>\r\n  //       </IconButton>\r\n  //       <p>Home</p>\r\n  //     </MenuItem>\r\n  //     <MenuItem onClick={onMobileMenuClose}>\r\n  //       <IconButton aria-label=\"cart-notifications\" color=\"inherit\">\r\n  // { !shoppingList.length && <AddShoppingCartIcon />}\r\n  //         {\r\n  //          shoppingList.length &&\r\n  //           <Badge badgeContent={shoppingList.length} color=\"secondary\">\r\n  //             <ShoppingCartIcon />\r\n  //           </Badge>\r\n  //         }\r\n  //       </IconButton>\r\n  //     </MenuItem>\r\n  //     <MenuItem onClick={onProfileMenuOpen}>\r\n  //       <IconButton\r\n  //         aria-label=\"account of current user\"\r\n  //         aria-controls=\"primary-search-account-menu\"\r\n  //         aria-haspopup=\"true\"\r\n  //         color=\"inherit\"\r\n  //       >\r\n  //         <AccountCircleIcon />\r\n  //       </IconButton>\r\n  //       <p>Profile</p>\r\n  //     </MenuItem>\r\n  //   </Menu>\r\n  // );\r\n}\r\n\r\n\r\n\r\nexport default AppBarComponent;\r\n","C:\\Users\\Dan Goldshtein\\Desktop\\shopi-style\\client\\src\\components\\CategoriesBarComponent\\CategoriesBarComponent.jsx",["149"],"import React, { useState } from 'react';\r\nimport { Link } from \"react-router-dom\";\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\n\r\nimport './CategoriesBarComponent.css';\r\nimport { capitalFirstLetter } from '../../services/dataTypes.service';\r\nimport categories from '../../utils/data';\r\n\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n        flexGrow: 1,\r\n    },\r\n    appBar: {\r\n        backgroundColor: '#2d2d2d',\r\n    },\r\n    menuButton: {\r\n        marginRight: theme.spacing(2),\r\n    },\r\n    title: {\r\n        flexGrow: 1,\r\n    },\r\n}));\r\n\r\n\r\nconst CategoriesBarComponent = props => {\r\n    const classes = useStyles();\r\n    return (\r\n        <div className={classes.root}>\r\n            <AppBar position=\"static\" className={classes.appBar}>\r\n                <Toolbar>\r\n                    {\r\n\r\n                        Object.keys(categories).map((category, index) =>\r\n                            <div className=\"dropdown\" key={index}>\r\n                                <li className=\"dropdown-li\">{capitalFirstLetter(category)}</li>\r\n                                <div className=\"dropdown-content\" key={index}>\r\n                                    {\r\n                                        categories[category].map((subCategory, i) =>\r\n                                            <Link to={`/${subCategory}`} key={i} >\r\n                                                {capitalFirstLetter(subCategory)}\r\n                                            </Link>\r\n                                        )\r\n                                    }\r\n                                </div>\r\n                            </div>\r\n                        )\r\n                    }\r\n                </Toolbar>\r\n            </AppBar>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default CategoriesBarComponent;","C:\\Users\\Dan Goldshtein\\Desktop\\shopi-style\\client\\src\\store\\constats\\autoCompleteConstants.js",[],"C:\\Users\\Dan Goldshtein\\Desktop\\shopi-style\\client\\src\\store\\constats\\collectionConstants.js",[],"C:\\Users\\Dan Goldshtein\\Desktop\\shopi-style\\client\\src\\store\\constats\\productsConstants.js",[],"C:\\Users\\Dan Goldshtein\\Desktop\\shopi-style\\client\\src\\store\\constats\\shoppingListConstants.js",[],"C:\\Users\\Dan Goldshtein\\Desktop\\shopi-style\\client\\src\\services\\shoppingList.service.js",[],"C:\\Users\\Dan Goldshtein\\Desktop\\shopi-style\\client\\src\\services\\dataTypes.service.js",[],"C:\\Users\\Dan Goldshtein\\Desktop\\shopi-style\\client\\src\\components\\AutoCompleteComponent\\AutoCompleteComponent.jsx",[],"C:\\Users\\Dan Goldshtein\\Desktop\\shopi-style\\client\\src\\pages\\ProductPage\\ProductPage.jsx",["150"],"import React, { useState, useEffect, Fragment } from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport { LoadingComponent } from '../../components/ExceptionComponents/ExceptionComponents';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport { fetchProductAction, updateSelectedProductAction } from '../../store/actions/productsActions';\r\nimport {\r\n    addNewProductToCartAction,\r\n    increaseProductAmountAction,\r\n    selectPaymentPageAction\r\n} from '../../store/actions/shoppingListActions';\r\nimport { Box, Button, Typography, Card, CardContent, CardMedia } from '@material-ui/core';\r\nimport { capitalized, capitalFirstLetter } from '../../services/dataTypes.service';\r\nimport { cloneDeep } from 'lodash';\r\nimport { isProductExists } from '../../services/shoppingList.service';\r\nimport { v4 as uuidv4 } from 'uuid';\r\nimport ShoppingCartIcon from '@material-ui/icons/ShoppingCart';\r\nimport { useParams, useHistory } from \"react-router-dom\";\r\nimport Popover from '@material-ui/core/Popover';\r\n\r\nimport './ProductPage.css';\r\nimport { Alert } from '@material-ui/lab';\r\nimport FavoriteBorder from '@material-ui/icons/FavoriteBorder';\r\n\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n        margin: 30,\r\n        height: 500,\r\n        boxShadow: '0px 0px 2px 2px rgba(0,0,0,0.2)',\r\n    },\r\n    cardContainer: {\r\n        display: 'flex',\r\n        flexDirection: 'row',\r\n        justifyContent: 'space-around',\r\n        marginTop: 50,\r\n    },\r\n    media: {\r\n        border: '2px solid #ccc',\r\n        borderRadius: '25px',\r\n        height: 400,\r\n        width: 400,\r\n    },\r\n    title: {\r\n        fontFamily: 'Acme, sans-serif',\r\n    },\r\n    details: {\r\n        display: 'flex',\r\n        flexDirection: 'column',\r\n        justifyContent: 'center',\r\n        border: '1px solid #ccc',\r\n        borderRadius: '25px',\r\n    },\r\n    button: {\r\n        width: '200px',\r\n    },\r\n    popover: {\r\n        width: '200px',\r\n    }\r\n}));\r\n\r\nconst ProductPage = (props) => {\r\n    const classes = useStyles();\r\n    const { collection, productID } = useParams();\r\n    const { product: initProduct, isLoading } = useSelector(state => state.product);\r\n    const { shoppingList } = useSelector(state => state.shoppingList);\r\n    const [product, setProduct] = useState(cloneDeep(initProduct));\r\n\r\n    const [anchorSuccessPopover, setSuccessPopover] = useState(null);\r\n    const [anchorErrorPopover, setErrorPopover] = useState(null);\r\n\r\n    const openSuccess = Boolean(anchorSuccessPopover);\r\n    const openError = Boolean(anchorErrorPopover);\r\n\r\n    const dispatch = useDispatch();\r\n\r\n    useEffect(() => {\r\n        dispatch(fetchProductAction(collection, productID));\r\n    }, [collection, productID]);\r\n\r\n    useEffect(() => {\r\n        if (initProduct) setProduct(cloneDeep(initProduct));\r\n    }, [initProduct]);\r\n\r\n    const onSizeClick = event => {\r\n        const newProduct = cloneDeep(product);\r\n        newProduct.selectedSize = event.target.value;\r\n        setProduct(newProduct);\r\n    }\r\n\r\n    const onAddToCartClick = event => { \r\n        if (!validateSize(product)) {\r\n            setErrorPopover(event.currentTarget);\r\n            return;\r\n        }\r\n        // isProductExists return isFound index\r\n        const productIndex = isProductExists(shoppingList, product);\r\n        if (productIndex !== -1) {\r\n            increaseProductAmount(productIndex);\r\n        } else {\r\n            addNewProductToCart(product);\r\n        }\r\n        setSuccessPopover(event.currentTarget);\r\n    }\r\n\r\n    const onBuyNowClick = (event, history) => {\r\n        if (!validateSize(product)) {\r\n            setErrorPopover(event.currentTarget);\r\n            return;\r\n        }\r\n        product.amount = 1;\r\n        dispatch(updateSelectedProductAction(product));\r\n        dispatch(selectPaymentPageAction(\"product-page\"));\r\n        history.push(\"/payment-page\");\r\n    }\r\n\r\n    const addNewProductToCart = (product) => {\r\n        product.uuid = uuidv4();\r\n        dispatch(addNewProductToCartAction(product));\r\n    }\r\n\r\n    const increaseProductAmount = (productIndex) => {\r\n        dispatch(increaseProductAmountAction(productIndex));\r\n    }\r\n\r\n    const validateSize = (product) => !(!product.selectedSize && product.sizes.length > 1)\r\n\r\n    let history = useHistory();\r\n\r\n    return (\r\n        <Card className={classes.root}>\r\n            {\r\n                <div className={classes.cardContainer}>\r\n                    {\r\n                        isLoading ? <LoadingComponent />\r\n                            : <Fragment>\r\n                                <CardMedia\r\n                                    className={classes.media}\r\n                                    image={product.imageUrl}\r\n                                />\r\n                                <CardContent className={classes.details}>\r\n                                    <Typography gutterBottom align=\"center\" variant=\"h5\" className={classes.title}>\r\n                                        {capitalFirstLetter(`${product.caption}`)}\r\n                                    </Typography >\r\n                                    {\r\n                                        product.sizes && product.sizes.length > 1 &&\r\n                                        <Typography gutterBottom align=\"center\" variant=\"caption\">\r\n                                            {capitalized(\"select size\")}\r\n                                        </Typography >\r\n                                    }\r\n                                    <div className=\"radio-buttons-group\">\r\n                                        {\r\n                                            product.sizes && product.sizes.length > 1 &&\r\n                                            product.sizes.map((size, i) => {\r\n                                                if (typeof size === 'string') { size = capitalized(size); }\r\n                                                return (\r\n                                                    <label className=\"size-label\" key={'size_label' + i}>\r\n                                                        <input\r\n                                                            type=\"radio\" key={'radio' + i} name=\"size\" value={size}\r\n                                                            onClick={event => onSizeClick(event)}\r\n                                                        />\r\n                                                        <div className=\"radio-button\" key={'radio_button' + i}>{size}</div>\r\n                                                    </label>\r\n                                                )\r\n                                            })\r\n                                        }\r\n                                    </div>\r\n                                    <Typography gutterBottom align=\"center\" variant=\"subtitle1\">\r\n                                        {capitalFirstLetter(`${product.price}$`)}\r\n                                    </Typography >\r\n                                    <Box\r\n                                        m={1}\r\n                                        display=\"flex\"\r\n                                        justifyContent=\"center\"\r\n                                    >\r\n                                        <form>\r\n                                            <Button\r\n                                                className={classes.button}\r\n                                                id=\"buy-now\"\r\n                                                fullWidth\r\n                                                variant=\"contained\"\r\n                                                color=\"primary\"\r\n                                                startIcon={<ShoppingCartIcon />}\r\n                                                onClick={event => onBuyNowClick(event, history)}\r\n                                            >\r\n                                                Buy Now\r\n                                        </Button >\r\n                                        </form>\r\n                                    </Box>\r\n                                    <Box\r\n                                        m={1}\r\n                                        display=\"flex\"\r\n                                        justifyContent=\"center\"\r\n                                    >\r\n                                        <Button\r\n                                            className={classes.button}\r\n                                            id='add-to-cart'\r\n                                            fullWidth\r\n                                            variant=\"contained\"\r\n                                            color=\"secondary\"\r\n                                            startIcon={<FavoriteBorder />}\r\n                                            onClick={onAddToCartClick}\r\n                                        >\r\n                                            Add to cart\r\n                                        </Button>\r\n                                    </Box>\r\n                                </CardContent>\r\n                            </Fragment>\r\n                    }\r\n                </div>\r\n            }\r\n            <Popover\r\n                id=\"success-popover\"\r\n                open={openSuccess}\r\n                anchorEl={anchorSuccessPopover}\r\n                onClose={() => setSuccessPopover(null)}\r\n                anchorOrigin={{\r\n                    vertical: 'bottom',\r\n                    horizontal: 'center',\r\n                }}\r\n                transformOrigin={{\r\n                    vertical: 'top',\r\n                    horizontal: 'center',\r\n                }}\r\n            >\r\n                <Alert severity=\"success\">Product Added.</Alert>\r\n            </Popover>\r\n            <Popover\r\n                id=\"success-popover\"\r\n                open={openError}\r\n                anchorEl={anchorErrorPopover}\r\n                onClose={() => setErrorPopover(null)}\r\n                anchorOrigin={{\r\n                    vertical: 'bottom',\r\n                    horizontal: 'center',\r\n                }}\r\n                transformOrigin={{\r\n                    vertical: 'top',\r\n                    horizontal: 'center',\r\n                }}\r\n            >\r\n                <Alert severity=\"error\">Please Select Size!</Alert>\r\n            </Popover>\r\n        </Card >\r\n    );\r\n}\r\n\r\nexport default ProductPage;\r\n","C:\\Users\\Dan Goldshtein\\Desktop\\shopi-style\\client\\src\\pages\\CollectionPage\\CollectionPage.jsx",["151","152"],"import React, { Fragment, useEffect } from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport FiltersComponent from '../../components/FiltersComponent/FiltersComponent';\r\nimport ProductCardComponent from '../../components/ProductCardComponent/ProductCardComponent';\r\nimport { LoadingComponent, ErrorComponent } from '../../components/ExceptionComponents/ExceptionComponents';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport { fetchCollectionAction } from '../../store/actions/collectionActions';\r\n\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n        flexGrow: 1,\r\n        display: 'flex',\r\n        flexDirection: 'column',\r\n        justifyContent: 'center',\r\n        marginTop: 10,\r\n    },\r\n    card: {\r\n        textAlign: 'center',\r\n        color: theme.palette.text.secondary,\r\n    },\r\n}));\r\n\r\nconst CollectionPage = ({ subCategory }) => {\r\n    const classes = useStyles();\r\n    const { collection, isLoading } = useSelector(state => state.collection);\r\n    const dispatch = useDispatch();\r\n\r\n    useEffect(() => {\r\n        refetch();\r\n    }, []);\r\n\r\n    const refetch = params => {\r\n        dispatch(fetchCollectionAction(subCategory, params));\r\n    };\r\n\r\n    return (\r\n        <div className={classes.root}>\r\n            {\r\n                collection && collection.products &&\r\n                <FiltersComponent\r\n                    collection={collection}\r\n                    refetch={refetch}\r\n                />\r\n            }\r\n            {\r\n                isLoading ? <LoadingComponent />\r\n                    : collection.products ?\r\n                        <Grid container spacing={2}>\r\n                            {\r\n                                collection.products.map(product =>\r\n                                    <Grid key={product._id} item xs={12} sm={3}>\r\n                                        <ProductCardComponent\r\n                                            key={product._id}\r\n                                            className={classes.card}\r\n                                            product={product}\r\n                                        />\r\n                                    </Grid>\r\n                                )\r\n                            }\r\n                        </Grid>\r\n                        : <ErrorComponent message='products section error' />\r\n            }\r\n        </div >\r\n    );\r\n}\r\n\r\nexport default CollectionPage;\r\n","C:\\Users\\Dan Goldshtein\\Desktop\\shopi-style\\client\\src\\pages\\HomePage\\HomePage.jsx",["153"],"import React, { Fragment } from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport { Container, CssBaseline, Grid, CardHeader } from '@material-ui/core';\r\nimport { Link } from 'react-router-dom';\r\nimport Card from '@material-ui/core/Card';\r\nimport CardActionArea from '@material-ui/core/CardActionArea';\r\nimport CardMedia from '@material-ui/core/CardMedia';\r\nimport categories from '../../utils/data';\r\nimport { capitalFirstLetter } from '../../services/dataTypes.service';\r\nimport FooterComponent from '../../components/FooterComponent/FooterComponent';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    backgroundImage: {\r\n        minHeight: '100vh',\r\n        backgroundImage: `url(${process.env.PUBLIC_URL}/assets/images/backgrounds/main.jpg)`,\r\n        backgroundPosition: 'center',\r\n        backgroundRepeat: 'no-repeat',\r\n        backgroundSize: 'cover',\r\n        display: 'flex',\r\n        justifyContent: 'center',\r\n        alignItems: 'center',\r\n    },\r\n    backgroundText: {\r\n        boxShadow: '0px 0px 8px 8px rgba(0,0,0,0.2)',\r\n        backgroundColor: 'rgb(0,0,0)', /* Fallback color */\r\n        backgroundColor: 'rgba(0,0,0, 0.4)', /* Black w/opacity/see-through */\r\n        color: 'white',\r\n        fontSize: '60px',\r\n        fontFamily: 'Acme, sans-serif',\r\n        border: '3px solid #f1f1f1',\r\n        position: 'absolute',\r\n        top: '270px',\r\n        left: '50%',\r\n        transform: 'translate(-50%, -50%)',\r\n        width: '80%',\r\n        padding: 20,\r\n        textAlign: 'center',\r\n    },\r\n    link: {\r\n        textDecoration: 'none !important',\r\n    },\r\n    categoriesContainer: {\r\n        marginTop: 350,\r\n    },\r\n    card: {\r\n        minWidth: 200,\r\n        maxWidth: 400,\r\n        padding: 10,\r\n        boxShadow: '0px 0px 8px 8px rgba(0,0,0,0.2)',\r\n        transition: 'transform .2s ease-in-out',\r\n        '&:hover': {\r\n            transform: 'scale(1.1)'\r\n        },\r\n    },\r\n    cardHeader: {\r\n        textAlign: 'center',\r\n        fontFamily: 'Acme, sans-serif',\r\n        fontSize: 20,\r\n        color: 'black',\r\n    },\r\n    cardMedia: {\r\n        height: 300,\r\n    },\r\n}));\r\n\r\nconst setImagePath = filename => `${process.env.PUBLIC_URL}/assets/images/categories/${filename}.jpg`;\r\n\r\nconst HomePage = props => {\r\n    const classes = useStyles();\r\n    return (\r\n        <Fragment>\r\n            <div className={classes.backgroundImage}>\r\n                <CssBaseline />\r\n                <h1 className={classes.backgroundText}>\r\n                    Shopping From <br />Anywhere.\r\n                </h1>\r\n                <Container className={classes.categoriesContainer}>\r\n                    <Grid container spacing={4}>\r\n                        {\r\n                            Object.keys(categories).map(category =>\r\n                                categories[category].map((subCategory, i) =>\r\n                                    <Grid item xs={4} >\r\n                                        <Card className={classes.card}>\r\n                                            <Link to={`/${subCategory}`} key={i} className={classes.link}>\r\n                                                <CardHeader\r\n                                                    className={classes.cardHeader}\r\n                                                    titleTypographyProps={{ variant: 'inherit' }}\r\n                                                    title={capitalFirstLetter(subCategory)}\r\n                                                />\r\n                                                <CardActionArea>\r\n                                                    <CardMedia\r\n                                                        className={classes.cardMedia}\r\n                                                        image={setImagePath(subCategory)}\r\n                                                    />\r\n                                                </CardActionArea>\r\n                                            </Link>\r\n                                        </Card>\r\n                                    </Grid>\r\n                                )\r\n                            )\r\n                        }\r\n                    </Grid>\r\n                </Container>\r\n            </div>\r\n            <FooterComponent />\r\n        </Fragment>\r\n    )\r\n}\r\n\r\nexport default HomePage;\r\n","C:\\Users\\Dan Goldshtein\\Desktop\\shopi-style\\client\\src\\pages\\ShoppingListPage\\ShoppingListPage.jsx",[],"C:\\Users\\Dan Goldshtein\\Desktop\\shopi-style\\client\\src\\pages\\PaymentPage\\PaymentPage.jsx",["154","155"],"import React, { useState } from 'react';\r\nimport { makeStyles, withStyles } from '@material-ui/core/styles';\r\nimport {\r\n    Dialog,\r\n    DialogContent,\r\n    DialogContentText,\r\n    Table,\r\n    TableBody,\r\n    TableCell,\r\n    TableContainer,\r\n    TableHead,\r\n    TableRow\r\n} from '@material-ui/core';\r\nimport Container from '@material-ui/core/Container';\r\nimport { useSelector } from 'react-redux';\r\nimport { LoadingComponent } from '../../components/ExceptionComponents/ExceptionComponents';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport { cloneDeep } from 'lodash';\r\nimport { STRIPE_PUBLISH_KEY, BASE_API_URL } from '../../utils/keys';\r\nimport { loadStripe } from '@stripe/stripe-js';\r\nimport { Elements, CardElement, useStripe, useElements } from '@stripe/react-stripe-js';\r\nimport { Typography, Paper, Grid, Button, CssBaseline } from '@material-ui/core';\r\nimport axios from 'axios';\r\nimport MuiDialogTitle from '@material-ui/core/DialogTitle';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport CloseIcon from '@material-ui/icons/Close';\r\n\r\n\r\nconst stripePromise = loadStripe(STRIPE_PUBLISH_KEY);\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n        marginTop: theme.spacing(5),\r\n        paddingBottom: '40px',\r\n    },\r\n    tableContainer: {\r\n        margin: '0 auto',\r\n        marginTop: theme.spacing(5),\r\n        marginBottom: theme.spacing(5),\r\n        width: '700px',\r\n    },\r\n    image: {\r\n        height: '100px',\r\n        width: '100px',\r\n        borderRadius: \"50%\",\r\n    },\r\n    centerTableCell: {\r\n        display: 'flex',\r\n        flexDirection: 'row',\r\n        justifyContent: 'center',\r\n    },\r\n    amountField: {\r\n        width: '50%',\r\n    },\r\n    paper: {\r\n        paddingTop: theme.spacing(3),\r\n        paddingRight: theme.spacing(8),\r\n        paddingLeft: theme.spacing(8),\r\n        paddingBottom: theme.spacing(3),\r\n    },\r\n    form: {\r\n        width: '700px',\r\n        margin: '0 auto',\r\n    },\r\n    paymentCard: {\r\n        margin: '20px',\r\n    }\r\n}));\r\n\r\n\r\nconst styles = (theme) => ({\r\n    root: {\r\n        margin: 0,\r\n        padding: theme.spacing(2),\r\n    },\r\n    closeButton: {\r\n        position: 'absolute',\r\n        right: theme.spacing(1),\r\n        top: theme.spacing(1),\r\n        color: theme.palette.grey[500],\r\n    },\r\n});\r\n\r\nconst DialogTitle = withStyles(styles)((props) => {\r\n    const { children, classes, onClose, ...other } = props;\r\n    return (\r\n        <MuiDialogTitle disableTypography className={classes.root} {...other}>\r\n            <Typography variant=\"h6\">{children}</Typography>\r\n            {onClose ? (\r\n                <IconButton aria-label=\"close\" className={classes.closeButton} onClick={onClose}>\r\n                    <CloseIcon />\r\n                </IconButton>\r\n            ) : null}\r\n        </MuiDialogTitle>\r\n    );\r\n});\r\nconst PaymentPage = props => {\r\n    const classes = useStyles();\r\n    const { product: initProduct, isLoading: productLoading } = useSelector(state => state.product);\r\n    const { shoppingList, isLoading: listLoading, paymentPage } = useSelector(state => state.shoppingList);\r\n    const [product, setProduct] = useState(cloneDeep(initProduct));\r\n\r\n    const onAmountChange = (event, product) => {\r\n        product.amount = event.target.value;\r\n        product.newPrice = product.amount * product.price;\r\n        setProduct(cloneDeep(product));\r\n    }\r\n\r\n    return (\r\n        <Container >\r\n            {\r\n                productLoading || listLoading ? <LoadingComponent />\r\n                    : product && paymentPage === \"product-page\" &&\r\n                    (\r\n                        <TableContainer elevation={3} className={classes.tableContainer} component={Paper}>\r\n                            <Table className={classes.table} aria-label=\"simple table\">\r\n                                <TableHead>\r\n                                    <TableRow>\r\n                                        <TableCell align=\"center\">Image</TableCell>\r\n                                        <TableCell align=\"center\">Caption</TableCell>\r\n                                        <TableCell align=\"center\">Size</TableCell>\r\n                                        <TableCell align=\"center\">Amount</TableCell>\r\n                                        <TableCell align=\"center\">Price</TableCell>\r\n                                    </TableRow>\r\n                                </TableHead>\r\n                                <TableBody>\r\n                                    <TableRow key={product.uuid}>\r\n                                        <TableCell className={classes.centerTableCell} component=\"th\" scope=\"row\">\r\n                                            <img className={classes.image} src={product.imageUrl} />\r\n                                        </TableCell>\r\n                                        <TableCell align=\"center\">{product.caption}</TableCell>\r\n                                        <TableCell align=\"center\">{product.selectedSize ? product.selectedSize : \"-\"}</TableCell>\r\n                                        <TableCell align=\"center\">\r\n                                            <TextField\r\n                                                className={classes.amountField}\r\n                                                id=\"standard-number\"\r\n                                                inputProps={{ min: 1, style: { textAlign: 'center' } }}\r\n                                                type=\"number\"\r\n                                                defaultValue={product.amount}\r\n                                                onChange={event => onAmountChange(event, product)}\r\n                                            />\r\n                                        </TableCell>\r\n                                        <TableCell align=\"center\">\r\n                                            {`${product.newPrice ? product.newPrice : product.price}$`}\r\n                                        </TableCell>\r\n                                    </TableRow>\r\n                                </TableBody>\r\n                            </Table>\r\n                        </TableContainer>\r\n                    )\r\n            }\r\n            <Elements stripe={stripePromise}>\r\n                {product && paymentPage === \"product-page\" && <CheckoutForm items={[product]} />}\r\n                {shoppingList && paymentPage === \"shopping-list-page\" && <CheckoutForm items={shoppingList} />}\r\n            </Elements>\r\n        </Container>\r\n    );\r\n}\r\n\r\n\r\nconst CheckoutForm = ({ items }) => {\r\n    const classes = useStyles();\r\n    const stripe = useStripe();\r\n    const elements = useElements();\r\n    const [email, setEmail] = useState('');\r\n\r\n    const [openDialog, setOpenDialog] = useState(false);\r\n\r\n    const handleClickOpen = () => {\r\n        setOpenDialog(true);\r\n    };\r\n\r\n    const handleClose = () => {\r\n        setOpenDialog(false);\r\n    };\r\n\r\n    const totalPrice = items.reduce((acc, item) => acc + (item.amount * item.price), 0);\r\n\r\n    const onSubmit = async event => {\r\n        event.preventDefault();\r\n\r\n        const { error, paymentMethod } = await stripe.createPaymentMethod({\r\n            type: 'card',\r\n            card: elements.getElement(CardElement)\r\n        });\r\n\r\n        if (!error) {\r\n            const { id } = paymentMethod;\r\n            try {\r\n                const { data } = await axios.post(`${BASE_API_URL}/payment`, { id, amount: 1099 });\r\n                if (data.isConfirm) setOpenDialog(true);\r\n            } catch (err) {\r\n                console.log(err)\r\n            }\r\n        } else {\r\n            console.log(error)\r\n        }\r\n    }\r\n\r\n    const validateEmail = email => {\r\n        if (email === '') return true;\r\n        const regex = /^(([^<>()[\\]\\\\.,;:\\s@\"]+(\\.[^<>()[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\r\n        return regex.test(String(email).toLowerCase());\r\n    }\r\n\r\n    return (\r\n        <div className={classes.root}>\r\n            <form onSubmit={onSubmit} className={classes.form}>\r\n                <Paper elevation={5} className={classes.paper}>\r\n                    <Grid container spacing={3}>\r\n                        <Grid item xs={12}>\r\n                            <Grid container spacing={2}>\r\n                                <Grid item xs={12}>\r\n                                    <Typography >Total Charges: {totalPrice}$</Typography>\r\n                                </Grid>\r\n                                <Grid item xs={12}>\r\n                                    <TextField\r\n                                        fullWidth\r\n                                        label=\"Full Name\"\r\n                                        name=\"full-name\"\r\n                                        size=\"small\"\r\n                                        variant=\"outlined\"\r\n                                        required\r\n                                    />\r\n                                </Grid>\r\n                                <Grid item xs={12}>\r\n                                    <TextField\r\n                                        fullWidth\r\n                                        label=\"Email\"\r\n                                        name=\"email\"\r\n                                        size=\"small\"\r\n                                        variant=\"outlined\"\r\n                                        required\r\n                                        error={!validateEmail(email)}\r\n                                        onChange={event => setEmail(event.target.value)}\r\n                                    />\r\n                                </Grid>\r\n                                <Grid item xs={12}>\r\n                                    <TextField\r\n                                        fullWidth\r\n                                        label=\"Delivery Address\"\r\n                                        name=\"address\"\r\n                                        size=\"small\"\r\n                                        variant=\"outlined\"\r\n                                        required\r\n                                    />\r\n                                </Grid>\r\n                            </Grid>\r\n                        </Grid>\r\n                    </Grid>\r\n                    <CssBaseline />\r\n                    <CardElement className={classes.paymentCard} />\r\n                    <Grid item xs={12}>\r\n                        <Button\r\n                            color=\"primary\"\r\n                            fullWidth\r\n                            disabled={!stripe}\r\n                            type=\"submit\"\r\n                            variant=\"contained\">\r\n                            Pay\r\n                    </Button>\r\n                    </Grid>\r\n                    <Dialog\r\n                        open={openDialog}\r\n                        onClose={handleClose}\r\n                    >\r\n                        <DialogTitle id=\"alert-dialog-title\" onClose={handleClose}>\r\n                            Payment Confirmation\r\n                        </DialogTitle>\r\n                        <DialogContent dividers>\r\n                            <DialogContentText id=\"dialog\">\r\n                                This is a dummy payment. Payment process is still in development.\r\n                                </DialogContentText>\r\n                        </DialogContent>\r\n                    </Dialog>\r\n                </Paper>\r\n            </form >\r\n        </div >\r\n    )\r\n}\r\n\r\nexport default PaymentPage;","C:\\Users\\Dan Goldshtein\\Desktop\\shopi-style\\client\\src\\store\\actions\\productsActions.js",[],"C:\\Users\\Dan Goldshtein\\Desktop\\shopi-style\\client\\src\\store\\actions\\collectionActions.js",[],"C:\\Users\\Dan Goldshtein\\Desktop\\shopi-style\\client\\src\\store\\actions\\shoppingListActions.js",[],"C:\\Users\\Dan Goldshtein\\Desktop\\shopi-style\\client\\src\\components\\ExceptionComponents\\ExceptionComponents.jsx",["156","157"],"import React, { useState, useEffect } from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport CircularProgress from '@material-ui/core/CircularProgress';\r\nimport { Alert, AlertTitle } from '@material-ui/lab';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  loading: {\r\n    display: 'flex',\r\n    flexDirection: 'column',\r\n    '& > * + *': {\r\n      marginTop: theme.spacing(2),\r\n    }\r\n  },\r\n  error: {\r\n    width: '100%',\r\n    '& > * + *': {\r\n      marginTop: theme.spacing(2),\r\n    }\r\n  },\r\n}));\r\n\r\n\r\nexport const LoadingComponent = props => {\r\n  const classes = useStyles();\r\n  return (\r\n    <div className={classes.loading}>\r\n      <CircularProgress />\r\n      <strong>Loading...</strong>\r\n    </div>\r\n  );\r\n}\r\n\r\n\r\nexport const ErrorComponent = ({ message }) => {\r\n  const classes = useStyles();\r\n  return (\r\n    <div className={classes.error}>\r\n      <Alert severity=\"error\" elevation={6} variant=\"filled\">\r\n        <AlertTitle>Error</AlertTitle>\r\n        {message ? <strong>{message}</strong> : <strong>check which error</strong>}\r\n      </Alert>\r\n    </div>\r\n  );\r\n}\r\n\r\n\r\n","C:\\Users\\Dan Goldshtein\\Desktop\\shopi-style\\client\\src\\components\\FiltersComponent\\FiltersComponent.jsx",["158"],"import React, { useState, useEffect } from 'react'\r\nimport './FiltersComponent.css';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Select from 'react-select';\r\nimport { mapOptions } from '../../services/dataTypes.service';\r\nimport { cloneDeep } from 'lodash'\r\nimport useMounted from '../../hooks/useMounted';\r\n\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    selector: {\r\n        margin: theme.spacing(1),\r\n        minWidth: 200,\r\n        maxWidth: 200,\r\n    },\r\n}));\r\n\r\nconst initialFilters = {\r\n    gender: '',\r\n    types: [],\r\n    colors: [],\r\n    priceRange: [],\r\n}\r\n\r\nconst FiltersComponent = ({ collection, refetch }) => {\r\n    const classes = useStyles();\r\n    const mounted = useMounted();\r\n    const [filters, setFilters] = useState(initialFilters);\r\n\r\n    useEffect(() => {\r\n        if (!mounted) return;\r\n        refetch(filters);\r\n    }, [filters])\r\n\r\n    const updateFilters = ({ key, value }) => setFilters(prev => {\r\n        prev = cloneDeep(prev);\r\n        prev[key] = value;\r\n        return prev;\r\n    })\r\n\r\n    const onGenderChange = (item) => updateFilters({ key: 'gender', value: item.value || '' });\r\n\r\n    const onTypeChange = (items, options) => {\r\n        let list = [];\r\n        if (options.action === \"remove-value\") {\r\n            list = filters.types.filter(i => i !== options.removedValue.value);\r\n        } else {\r\n            list = items ? items.map(i => i.value) : [];\r\n        }\r\n        updateFilters({ key: 'types', value: list });\r\n    }\r\n\r\n    const onColorChange = (items, options) => {\r\n        let list = [];\r\n        if (options.action === \"remove-value\") {\r\n            list = filters.colors.filter(i => i !== options.removedValue.value);\r\n        } else {\r\n            list = items ? items.map(i => i.value) : [];\r\n        }\r\n        updateFilters({ key: 'colors', value: list });\r\n    }\r\n\r\n    return (\r\n        <div className='filters-container'>\r\n            {\r\n                collection.subCategory.genders.length > 1 &&\r\n                <Select\r\n                    className={classes.selector}\r\n                    placeholder=\"Gender\"\r\n                    options={mapOptions(collection.subCategory.genders)}\r\n                    onChange={onGenderChange}\r\n                />\r\n            }\r\n            {\r\n                collection.subCategory.types.length > 1 &&\r\n                <Select\r\n                    className={classes.selector}\r\n                    isMulti\r\n                    placeholder=\"Types\"\r\n                    options={mapOptions(collection.subCategory.types)}\r\n                    onChange={onTypeChange}\r\n                />\r\n            }\r\n            {\r\n                <Select\r\n                    className={classes.selector}\r\n                    closeMenuOnSelect={false}\r\n                    isMulti\r\n                    placeholder=\"Colors\"\r\n                    options={mapOptions(collection.colorsOptions)}\r\n                    onChange={onColorChange}\r\n                />\r\n            }\r\n            {\r\n                // <Select\r\n                //     className={classes.selector}\r\n                //     isMulti\r\n                //     placeholder=\"Price Range\"\r\n                //     options={mapOptions(collection.priceOptions)}\r\n                //     onChange={items => updateFilters({ key: 'priceRange', value: items.map(i => i.value) })}\r\n                // />\r\n            }\r\n        </div >\r\n    )\r\n}\r\n\r\nexport default FiltersComponent;\r\n","C:\\Users\\Dan Goldshtein\\Desktop\\shopi-style\\client\\src\\components\\ProductCardComponent\\ProductCardComponent.jsx",[],"C:\\Users\\Dan Goldshtein\\Desktop\\shopi-style\\client\\src\\components\\FooterComponent\\FooterComponent.jsx",[],"C:\\Users\\Dan Goldshtein\\Desktop\\shopi-style\\client\\src\\hooks\\useMounted.js",[],"C:\\Users\\Dan Goldshtein\\Desktop\\shopi-style\\client\\src\\utils\\data.js",[],{"ruleId":"159","replacedBy":"160"},{"ruleId":"161","replacedBy":"162"},{"ruleId":"163","severity":1,"message":"164","line":1,"column":17,"nodeType":"165","messageId":"166","endLine":1,"endColumn":25},{"ruleId":"163","severity":1,"message":"167","line":1,"column":27,"nodeType":"165","messageId":"166","endLine":1,"endColumn":36},{"ruleId":"163","severity":1,"message":"168","line":5,"column":46,"nodeType":"165","messageId":"166","endLine":5,"endColumn":54},{"ruleId":"163","severity":1,"message":"169","line":5,"column":56,"nodeType":"165","messageId":"166","endLine":5,"endColumn":60},{"ruleId":"163","severity":1,"message":"170","line":5,"column":62,"nodeType":"165","messageId":"166","endLine":5,"endColumn":71},{"ruleId":"163","severity":1,"message":"171","line":7,"column":8,"nodeType":"165","messageId":"166","endLine":7,"endColumn":25},{"ruleId":"163","severity":1,"message":"172","line":8,"column":8,"nodeType":"165","messageId":"166","endLine":8,"endColumn":20},{"ruleId":"173","severity":1,"message":"174","line":131,"column":13,"nodeType":"175","endLine":131,"endColumn":115},{"ruleId":"163","severity":1,"message":"164","line":1,"column":17,"nodeType":"165","messageId":"166","endLine":1,"endColumn":25},{"ruleId":"176","severity":1,"message":"177","line":78,"column":8,"nodeType":"178","endLine":78,"endColumn":31,"suggestions":"179"},{"ruleId":"163","severity":1,"message":"180","line":1,"column":17,"nodeType":"165","messageId":"166","endLine":1,"endColumn":25},{"ruleId":"176","severity":1,"message":"181","line":32,"column":8,"nodeType":"178","endLine":32,"endColumn":10,"suggestions":"182"},{"ruleId":"183","severity":1,"message":"184","line":26,"column":9,"nodeType":"185","messageId":"186","endLine":26,"endColumn":24},{"ruleId":"173","severity":1,"message":"174","line":129,"column":45,"nodeType":"175","endLine":129,"endColumn":101},{"ruleId":"163","severity":1,"message":"187","line":169,"column":11,"nodeType":"165","messageId":"166","endLine":169,"endColumn":26},{"ruleId":"163","severity":1,"message":"164","line":1,"column":17,"nodeType":"165","messageId":"166","endLine":1,"endColumn":25},{"ruleId":"163","severity":1,"message":"167","line":1,"column":27,"nodeType":"165","messageId":"166","endLine":1,"endColumn":36},{"ruleId":"176","severity":1,"message":"188","line":33,"column":8,"nodeType":"178","endLine":33,"endColumn":17,"suggestions":"189"},"no-native-reassign",["190"],"no-negated-in-lhs",["191"],"no-unused-vars","'useState' is defined but never used.","Identifier","unusedVar","'useEffect' is defined but never used.","'MenuItem' is defined but never used.","'Menu' is defined but never used.","'TextField' is defined but never used.","'AccountCircleIcon' is defined but never used.","'MoreVertIcon' is defined but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'dispatch'. Either include it or remove the dependency array.","ArrayExpression",["192"],"'Fragment' is defined but never used.","React Hook useEffect has a missing dependency: 'refetch'. Either include it or remove the dependency array.",["193"],"no-dupe-keys","Duplicate key 'backgroundColor'.","ObjectExpression","unexpected","'handleClickOpen' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'mounted' and 'refetch'. Either include them or remove the dependency array. If 'refetch' changes too often, find the parent component that defines it and wrap that definition in useCallback.",["194"],"no-global-assign","no-unsafe-negation",{"desc":"195","fix":"196"},{"desc":"197","fix":"198"},{"desc":"199","fix":"200"},"Update the dependencies array to be: [collection, dispatch, productID]",{"range":"201","text":"202"},"Update the dependencies array to be: [refetch]",{"range":"203","text":"204"},"Update the dependencies array to be: [filters, mounted, refetch]",{"range":"205","text":"206"},[2699,2722],"[collection, dispatch, productID]",[1144,1146],"[refetch]",[871,880],"[filters, mounted, refetch]"]